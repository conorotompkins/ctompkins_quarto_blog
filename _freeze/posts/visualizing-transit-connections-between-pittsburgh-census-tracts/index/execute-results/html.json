{
  "hash": "0b866f93cef56f008a39f07ce772208a",
  "result": {
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Visualizing Transit Connections Between Pittsburgh Census Tracts\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [R, Pittsburgh, Allegheny County, Transit, WPRDC]\ncategories: [R, Pittsburgh, Allegheny County, Transit, WPRDC]\ndate: 2020-03-01\nlastmod: 2020-08-12T10:50:44-04:00\nfeatured: false\ndraft: false\n\n# Featured image\n# To use, add an image named `featured.jpg/png` to your page's folder.\n# Focal points: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight.\nimage: featured.png\n\n# Projects (optional).\n#   Associate this post with one or more of your projects.\n#   Simply enter your project's folder or file name without extension.\n#   E.g. `projects = [\"internal-project\"]` references `content/project/deep-learning/index.md`.\n#   Otherwise, set `projects = []`.\nprojects: []\neditor_options: \n  chunk_output_type: console\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\nIn this post I will use transit line and stop data from the [WPRDC](https://data.wprdc.org/group/0f962c7b-baa3-483b-93e3-539118d0213c?tags=Port+Authority) to map connections between census tracts. I access the census data via `{tidycensus}`, which contains information about the commuter connections between census tracts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\nlibrary(janitor)\nlibrary(tidycensus)\nlibrary(leaflet)\n\noptions(tigris_use_cache = TRUE,\n        scipen = 999,\n        digits = 2)\n```\n:::\n\n\nThis code loads the transit line data from the [WPRDC](). I create the `full_route_name_id` column and set the coordinate reference system to `4326`.\n\n::: {.cell}\n\n```{.r .cell-code}\n##load transit data\ntransit_lines <- st_read(\"post_data/shapefiles/transit_lines/PAAC_Routes_1909.shp\") %>%\n  clean_names() %>%\n  mutate_at(vars(-all_of(c(\"geometry\"))), as.character) %>%\n  rename(route_id = route,\n         service_type = type_serv) %>% \n  distinct(service_type, route_id, route_name, geometry) %>%\n  mutate(full_route_name_id = str_c(route_id, route_name, sep = \" \")) %>% \n  st_transform(3488)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `PAAC_Routes_1909' from data source \n  `/Users/conorotompkins/Documents/github_repos/ctompkins_quarto_blog/posts/visualizing-transit-connections-between-pittsburgh-census-tracts/post_data/shapefiles/transit_lines/PAAC_Routes_1909.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 102 features and 13 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 1300000 ymin: 350000 xmax: 1400000 ymax: 490000\nProjected CRS: NAD83(2011) / Pennsylvania South (ftUS)\n```\n:::\n\n```{.r .cell-code}\ntransit_lines\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 102 features and 4 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 960000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\nFirst 10 features:\n   service_type route_id               route_name\n1         Local       26                Chartiers\n2         Local       27                Fairywood\n3         Local       40           Mt. Washington\n4  Key Corridor      61C   McKeesport - Homestead\n5       Express       65            Squirrel Hill\n6  Key Corridor      71A                   Negley\n7  Key Corridor      71D                 Hamilton\n8         Local       74 Homewood - Squirrel Hill\n9         Local       83             Bedford Hill\n10        Local       89         Garfield Commons\n                         geometry          full_route_name_id\n1  MULTILINESTRING ((3293319 9...                26 Chartiers\n2  MULTILINESTRING ((3293319 9...                27 Fairywood\n3  MULTILINESTRING ((3294223 9...           40 Mt. Washington\n4  MULTILINESTRING ((3293614 9...  61C McKeesport - Homestead\n5  MULTILINESTRING ((3300806 9...            65 Squirrel Hill\n6  MULTILINESTRING ((3293614 9...                  71A Negley\n7  MULTILINESTRING ((3293614 9...                71D Hamilton\n8  MULTILINESTRING ((3298497 9... 74 Homewood - Squirrel Hill\n9  MULTILINESTRING ((3293794 9...             83 Bedford Hill\n10 MULTILINESTRING ((3298392 9...         89 Garfield Commons\n```\n:::\n:::\n\n\nThis is what the transit lines look like on a basic map:\n\n::: {.cell}\n\n```{.r .cell-code}\ntransit_lines %>% \n  ggplot(aes(color = route_id)) + \n    geom_sf() +\n    guides(color = FALSE) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThis creates a table of `route_id` and `service_type` that I will join against later.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_service_type <- transit_lines %>% \n  distinct(service_type, route_id, full_route_name_id) %>% \n  st_drop_geometry()\n```\n:::\n\n\nThis code loads the transit stop shapefile from the [WPRDC](https://data.wprdc.org/dataset/port-authority-of-allegheny-county-transit-stops):\n\n::: {.cell}\n\n```{.r .cell-code}\ntransit_stops <- st_read(\"post_data/shapefiles/transit_stops/PAAC_Stops_1909.shp\") %>%\n  st_transform(3488) %>% \n  clean_names() %>% \n  mutate_at(vars(-all_of(c(\"geometry\", \"routes_cou\"))), as.character) %>%\n  select(stop_name, routes_served = routes_ser, routes_cou, geometry) %>% \n  distinct(stop_name, routes_served = routes_served, routes_cou, geometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `PAAC_Stops_1909' from data source \n  `/Users/conorotompkins/Documents/github_repos/ctompkins_quarto_blog/posts/visualizing-transit-connections-between-pittsburgh-census-tracts/post_data/shapefiles/transit_stops/PAAC_Stops_1909.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6946 features and 17 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 1300000 ymin: 350000 xmax: 1400000 ymax: 490000\nProjected CRS: NAD83(2011) / Pennsylvania South (ftUS)\n```\n:::\n\n```{.r .cell-code}\ntransit_stops\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6946 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 960000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\nFirst 10 features:\n                             stop_name routes_served routes_cou\n1  26TH ST AT PENN AVE FS (SPRING WAY)    54, 88, 91          3\n2               28TH ST AT LIBERTY AVE            54          1\n3                32ND ST AT SPRING WAY    54, 88, 91          3\n4                 40TH ST AT BUTLER ST            93          1\n5            40TH ST AT DAVIDSON ST FS            93          1\n6              40TH ST OPP DAVIDSON ST        64, 93          2\n7                  4TH ST AT COREY AVE            59          1\n8               FIFTH AVE AT AIKEN AVE 28X, 71B, 71D          3\n9            FIFTH AVE AT AMBERSON AVE 28X, 71B, 71D          3\n10         FIFTH AVE AT BEECHWOOD BLVD      28X, 71D          2\n                 geometry\n1  POINT (3294762 976882)\n2  POINT (3294959 977172)\n3  POINT (3295178 977765)\n4  POINT (3295366 978861)\n5  POINT (3295502 978803)\n6  POINT (3295495 978788)\n7  POINT (3305461 976046)\n8  POINT (3298449 977796)\n9  POINT (3298126 977556)\n10 POINT (3299655 978942)\n```\n:::\n:::\n\n\nMuch of the important data is stored in the `routes_served` column. This code pivots the data longer to make it easier to work with.\n\n::: {.cell}\n\n```{.r .cell-code}\n#identify maximum number of routes served by a stop\nmax_routes_served <- transit_stops %>% \n  summarize(max_routes = max(routes_cou)) %>% \n  pull(max_routes)\n\ntransit_stops %>% \n  filter(routes_cou == max_routes_served)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 1 feature and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 980000 xmax: 3300000 ymax: 980000\nProjected CRS: NAD83(NSRS2007) / California Albers\n                      stop_name\n1 EAST BUSWAY AT PENN STATION C\n                                                                                routes_served\n1 1, 11, 15, 19L, 39, 40, 44, 6, P1, P10, P12, P16, P17, P2, P67, P68, P69, P7, P71, P76, P78\n  routes_cou               geometry\n1         21 POINT (3294168 975311)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#separate routes_served into multiple columns, one per route\ntransit_stops <- transit_stops %>% \n  separate(routes_served, sep = \", \", into = str_c(\"route_\", 1:max_routes_served), extra = \"merge\", fill = \"right\")\n\ntransit_stops\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6946 features and 23 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 960000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\nFirst 10 features:\n                             stop_name route_1 route_2 route_3 route_4 route_5\n1  26TH ST AT PENN AVE FS (SPRING WAY)      54      88      91    <NA>    <NA>\n2               28TH ST AT LIBERTY AVE      54    <NA>    <NA>    <NA>    <NA>\n3                32ND ST AT SPRING WAY      54      88      91    <NA>    <NA>\n4                 40TH ST AT BUTLER ST      93    <NA>    <NA>    <NA>    <NA>\n5            40TH ST AT DAVIDSON ST FS      93    <NA>    <NA>    <NA>    <NA>\n6              40TH ST OPP DAVIDSON ST      64      93    <NA>    <NA>    <NA>\n7                  4TH ST AT COREY AVE      59    <NA>    <NA>    <NA>    <NA>\n8               FIFTH AVE AT AIKEN AVE     28X     71B     71D    <NA>    <NA>\n9            FIFTH AVE AT AMBERSON AVE     28X     71B     71D    <NA>    <NA>\n10         FIFTH AVE AT BEECHWOOD BLVD     28X     71D    <NA>    <NA>    <NA>\n   route_6 route_7 route_8 route_9 route_10 route_11 route_12 route_13 route_14\n1     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n2     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n3     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n4     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n5     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n6     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n7     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n8     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n9     <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n10    <NA>    <NA>    <NA>    <NA>     <NA>     <NA>     <NA>     <NA>     <NA>\n   route_15 route_16 route_17 route_18 route_19 route_20 route_21 routes_cou\n1      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          3\n2      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          1\n3      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          3\n4      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          1\n5      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          1\n6      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          2\n7      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          1\n8      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          3\n9      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          3\n10     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA>          2\n                 geometry\n1  POINT (3294762 976882)\n2  POINT (3294959 977172)\n3  POINT (3295178 977765)\n4  POINT (3295366 978861)\n5  POINT (3295502 978803)\n6  POINT (3295495 978788)\n7  POINT (3305461 976046)\n8  POINT (3298449 977796)\n9  POINT (3298126 977556)\n10 POINT (3299655 978942)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransit_stops %>% \n  filter(routes_cou == max_routes_served)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 1 feature and 23 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 980000 xmax: 3300000 ymax: 980000\nProjected CRS: NAD83(NSRS2007) / California Albers\n                      stop_name route_1 route_2 route_3 route_4 route_5 route_6\n1 EAST BUSWAY AT PENN STATION C       1      11      15     19L      39      40\n  route_7 route_8 route_9 route_10 route_11 route_12 route_13 route_14 route_15\n1      44       6      P1      P10      P12      P16      P17       P2      P67\n  route_16 route_17 route_18 route_19 route_20 route_21 routes_cou\n1      P68      P69       P7      P71      P76      P78         21\n                geometry\n1 POINT (3294168 975311)\n```\n:::\n\n```{.r .cell-code}\n#pivot data longer\ntransit_stops <- transit_stops %>% \n  pivot_longer(cols = starts_with(\"route_\"), names_to = \"route_number\", values_to = \"route_id\") %>% \n  st_as_sf()\n  \ntransit_stops\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 145866 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 960000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\n# A tibble: 145,866 × 5\n   stop_name          routes_cou         geometry route_number route_id\n   <chr>                   <dbl>      <POINT [m]> <chr>        <chr>   \n 1 26TH ST AT PENN A…          3 (3294762 976882) route_1      54      \n 2 26TH ST AT PENN A…          3 (3294762 976882) route_2      88      \n 3 26TH ST AT PENN A…          3 (3294762 976882) route_3      91      \n 4 26TH ST AT PENN A…          3 (3294762 976882) route_4      <NA>    \n 5 26TH ST AT PENN A…          3 (3294762 976882) route_5      <NA>    \n 6 26TH ST AT PENN A…          3 (3294762 976882) route_6      <NA>    \n 7 26TH ST AT PENN A…          3 (3294762 976882) route_7      <NA>    \n 8 26TH ST AT PENN A…          3 (3294762 976882) route_8      <NA>    \n 9 26TH ST AT PENN A…          3 (3294762 976882) route_9      <NA>    \n10 26TH ST AT PENN A…          3 (3294762 976882) route_10     <NA>    \n# ℹ 145,856 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransit_stops <- transit_stops %>%\n  filter(!is.na(route_id)) %>% \n  left_join(df_service_type)\n```\n:::\n\n\nThis code loads the census tract data via `{tidycensus}`. I choose the census tracts `42003020100` (Downtown) and `42003070300` (Shadyside).\n\n::: {.cell}\n\n```{.r .cell-code}\n#load tract data\nallegheny_tracts <- get_decennial(geography = \"tract\",\n                                  variables = c(total_pop = \"P001001\"),\n                                  state = \"PA\",\n                                  county = \"Allegheny County\",\n                                  geometry = TRUE,\n                                  output = \"wide\",\n                                  year = 2010) %>%\n  mutate(name = case_when(GEOID == \"42003020100\" ~ \"Downtown\",\n                          GEOID == \"42003070300\" ~ \"Shadyside\")) %>% \n  st_transform(3488)\n\n#calculate centers of the tracts\nallegheny_tracts_centroid <- allegheny_tracts %>%\n  mutate(name = case_when(GEOID == \"42003020100\" ~ \"Downtown\",\n                          GEOID == \"42003070300\" ~ \"Shadyside\")) %>% \n  mutate(lon = map_dbl(geometry, ~st_centroid(.x)[[1]]),\n         lat = map_dbl(geometry, ~st_centroid(.x)[[2]])) %>% \n  st_drop_geometry() %>% \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 3488) %>% \n  st_transform(3488)\n\n#creates table with geometry of the county border\nallegheny <- allegheny_tracts %>% \n  summarize()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncommute_tracts <- allegheny_tracts %>% \n  filter(!is.na(name))\n\ncommute_centroids <- allegheny_tracts_centroid %>% \n  filter(!is.na(name))\n```\n:::\n\n\n\nThis code uses `st_is_within_distance` to find the transit stops that are within 700 meters of the center of the Downtown AND Shadyside census tracts.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_stops_joined_distance <- transit_stops %>% \n  st_join(commute_centroids, st_is_within_distance, dist = 700, left = TRUE) %>% \n  arrange(route_id)\n\ndf_stops_joined_distance\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 12087 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 960000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\n# A tibble: 12,087 × 11\n   stop_name          routes_cou         geometry route_number route_id\n   <chr>                   <dbl>      <POINT [m]> <chr>        <chr>   \n 1 WEST MIFFLIN GARA…          4 (3302630 969221) route_2      \"\"      \n 2 LAYOVER PENN PARK…         12 (3294348 975649) route_2      \"\"      \n 3 LAYOVER PENN PARK…         12 (3294348 975649) route_6      \"\"      \n 4 LAYOVER PENN PARK…         12 (3294348 975649) route_8      \"\"      \n 5 LAYOVER PENN PARK…         12 (3294348 975649) route_11     \"\"      \n 6 4TH AVE AT 7TH ST           1 (3306225 995240) route_1      \"1\"     \n 7 E 4TH AVE AT BOYD…          2 (3305254 999390) route_1      \"1\"     \n 8 4TH AVE AT CENTRA…          1 (3306153 995343) route_1      \"1\"     \n 9 E 4TH AVE AT LOCK…          2 (3305377 999550) route_1      \"1\"     \n10 E 4TH AVE AT WOOD…          2 (3305323 999479) route_1      \"1\"     \n# ℹ 12,077 more rows\n# ℹ 6 more variables: service_type <chr>, full_route_name_id <chr>,\n#   GEOID <chr>, NAME <chr>, total_pop <dbl>, name <chr>\n```\n:::\n\n```{.r .cell-code}\ndf_stops_joined_distance <- df_stops_joined_distance %>% \n  filter(!is.na(name))\n\ndf_stops_joined_distance\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 736 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 970000 xmax: 3300000 ymax: 980000\nProjected CRS: NAD83(NSRS2007) / California Albers\n# A tibble: 736 × 11\n   stop_name          routes_cou         geometry route_number route_id\n * <chr>                   <dbl>      <POINT [m]> <chr>        <chr>   \n 1 7TH ST AT FT DUQU…          9 (3293481 975066) route_1      1       \n 2 7TH ST AT PENN AV…          4 (3293586 974931) route_1      1       \n 3 LIBERTY AVE AT 7T…          8 (3293638 974904) route_1      1       \n 4 LIBERTY AVE AT SM…         19 (3293846 975073) route_1      1       \n 5 LIBERTY AVE AT WI…         18 (3293943 975161) route_1      1       \n 6 LIBERTY AVE OPP 9…         20 (3293761 974994) route_1      1       \n 7 LIBERTY AVE OPP S…          8 (3293856 975107) route_1      1       \n 8 7TH ST AT FT DUQU…          9 (3293481 975066) route_2      11      \n 9 7TH ST AT PENN AV…          4 (3293586 974931) route_2      11      \n10 LIBERTY AVE AT 7T…          8 (3293638 974904) route_2      11      \n# ℹ 726 more rows\n# ℹ 6 more variables: service_type <chr>, full_route_name_id <chr>,\n#   GEOID <chr>, NAME <chr>, total_pop <dbl>, name <chr>\n```\n:::\n\n```{.r .cell-code}\ndf_route_filter <- df_stops_joined_distance %>% \n  st_drop_geometry() %>% \n  distinct(route_id, name) %>% \n  group_by(route_id) %>% \n  filter(n() >= 2) %>% \n  ungroup() %>% \n  distinct(route_id)\n\ndf_route_filter\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 22 × 1\n   route_id\n   <chr>   \n 1 28X     \n 2 67      \n 3 69      \n 4 71A     \n 5 71B     \n 6 71C     \n 7 71D     \n 8 82      \n 9 86      \n10 P1      \n# ℹ 12 more rows\n```\n:::\n\n```{.r .cell-code}\ndf_stops_joined_distance <- df_stops_joined_distance %>% \n  semi_join(df_route_filter, by = c(\"route_id\" = \"route_id\")) %>% \n  left_join(df_service_type)\n\ndf_stops_joined_distance <- df_stops_joined_distance %>% \n  mutate(stop_name_route_id_route_name = str_c(full_route_name_id, str_to_title(stop_name), sep = \" - \"))\n```\n:::\n\n\nTo help visualize how the join works, imagine a buffer around each point (transit stop). This shows the stops from 71A with a buffer:\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(transit_stops)$units\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"m\"\n```\n:::\n\n```{.r .cell-code}\ntransit_stops %>% \n  mutate(geometry_buffered = st_buffer(geometry, dist = 700)) %>% \n  #st_transform(crs = 3488) %>% \n  filter(route_id == \"71A\") %>% \n  ggplot() +\n    geom_sf(data = commute_centroids,\n            color = \"blue\",\n            size = 3) +\n    geom_sf(color = \"red\", size = 1) +\n    geom_sf(aes(geometry = geometry_buffered),\n            fill = NA\n            ) +\n    #coord_sf(crs = 4326) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n`st_is_within_distance` identifies which red points are within 700 meters of the blue points.\n\nThis shows the tracts, the tract centroids, and the transit stops within 700 meters of the centroids.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_stops_joined_distance %>% \n  ggplot() +\n    geom_sf(data = commute_tracts) +\n    geom_sf(data = commute_centroids, color = \"red\") +\n    geom_sf() +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThis filters on the transit lines served by the stops that successfully joined against the Downtown and Shadyside centroids:\n\n::: {.cell}\n\n```{.r .cell-code}\ncommuter_transit_lines <- transit_lines %>% \n  semi_join(df_route_filter, by = c(\"route_id\" = \"route_id\"))\n\ncommuter_transit_lines\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 22 features and 4 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 970000 xmax: 3300000 ymax: 1000000\nProjected CRS: NAD83(NSRS2007) / California Albers\nFirst 10 features:\n   service_type route_id              route_name         full_route_name_id\n1  Key Corridor      71A                  Negley                 71A Negley\n2  Key Corridor      71D                Hamilton               71D Hamilton\n3         Rapid       P2       East Busway Short       P2 East Busway Short\n4       Express      P78           Oakmont Flyer          P78 Oakmont Flyer\n5         Rapid       P1 East Busway - All Stops P1 East Busway - All Stops\n6  Key Corridor      71B           Highland Park          71B Highland Park\n7         Local       69                Trafford                69 Trafford\n8         Local       86                 Liberty                 86 Liberty\n9       Express      P68    Braddock Hills Flyer   P68 Braddock Hills Flyer\n10      Express      P69          Trafford Flyer         P69 Trafford Flyer\n                         geometry\n1  MULTILINESTRING ((3293614 9...\n2  MULTILINESTRING ((3293614 9...\n3  MULTILINESTRING ((3293856 9...\n4  MULTILINESTRING ((3294045 9...\n5  MULTILINESTRING ((3294045 9...\n6  MULTILINESTRING ((3295547 9...\n7  MULTILINESTRING ((3310878 9...\n8  MULTILINESTRING ((3294134 9...\n9  MULTILINESTRING ((3294049 9...\n10 MULTILINESTRING ((3294049 9...\n```\n:::\n:::\n\n\nThese are the transit lines that serve the two tracts:\n\n::: {.cell}\n\n```{.r .cell-code}\ncommute_centroids %>% \n  ggplot() +\n    geom_sf(size = 3) +\n    geom_sf(data = commuter_transit_lines, aes(color = route_id)) +\n    theme_void()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThis sets the bounding box for the final static map:\n\n::: {.cell}\n\n```{.r .cell-code}\ncommute_zoom <- commute_tracts %>% \n  st_buffer(dist = 700) %>% \n  st_bbox()\n```\n:::\n\n\nThis crops the transit lines to only include the parts within the bounding box:\n\n::: {.cell}\n\n```{.r .cell-code}\ncommuter_transit_lines %>% \n  st_crop(commute_zoom)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 22 features and 4 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 3300000 ymin: 970000 xmax: 3300000 ymax: 980000\nProjected CRS: NAD83(NSRS2007) / California Albers\nFirst 10 features:\n   service_type route_id              route_name         full_route_name_id\n1  Key Corridor      71A                  Negley                 71A Negley\n2  Key Corridor      71D                Hamilton               71D Hamilton\n3         Rapid       P2       East Busway Short       P2 East Busway Short\n4       Express      P78           Oakmont Flyer          P78 Oakmont Flyer\n5         Rapid       P1 East Busway - All Stops P1 East Busway - All Stops\n6  Key Corridor      71B           Highland Park          71B Highland Park\n7         Local       69                Trafford                69 Trafford\n8         Local       86                 Liberty                 86 Liberty\n9       Express      P68    Braddock Hills Flyer   P68 Braddock Hills Flyer\n10      Express      P69          Trafford Flyer         P69 Trafford Flyer\n                         geometry\n1  MULTILINESTRING ((3293614 9...\n2  MULTILINESTRING ((3293614 9...\n3  MULTILINESTRING ((3293856 9...\n4  LINESTRING (3294045 975240,...\n5  MULTILINESTRING ((3294045 9...\n6  MULTILINESTRING ((3295547 9...\n7  MULTILINESTRING ((3299435 9...\n8  MULTILINESTRING ((3294134 9...\n9  MULTILINESTRING ((3294049 9...\n10 MULTILINESTRING ((3294049 9...\n```\n:::\n:::\n\n\nThis plots the Downtown and Shadyside census tracts and the transit lines and stops that serve them:\n\n::: {.cell}\n\n```{.r .cell-code}\np <- commuter_transit_lines %>% \n  st_crop(commute_zoom) %>% \n  ggplot() +\n    geom_sf(data = allegheny, fill = NA) +\n    geom_sf(data = commute_tracts, aes(fill = name), size = 1, alpha = .5) +\n    geom_sf_label(data = commute_centroids, aes(label = name)) +\n    geom_sf(aes(color = route_id)) +\n    geom_sf(data = st_jitter(df_stops_joined_distance), aes(color = route_id), shape = 21, size = 3) +\n    geom_sf_label(aes(color = route_id, label = route_id)) +\n    coord_sf(xlim = c(commute_zoom[1], commute_zoom[3]),\n             ylim = c(commute_zoom[2], commute_zoom[4])) +\n    facet_wrap(~service_type) +\n    guides(color = FALSE,\n           fill = FALSE) +\n    theme_void() +\n    theme(panel.border = element_rect(color = \"black\", fill = NA))\n\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nYou can use this interactive map made with `leaflet` to explore the transit lines and stops that connect Downtown and Shadyside:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(widgetframe)\n#transform geometries to crs 4326\n\nallegheny <- st_transform(allegheny, crs = 4326)\ncommute_tracts <- st_transform(commute_tracts, crs = 4326)\ncommuter_transit_lines <- st_transform(commuter_transit_lines, crs = 4326)\ndf_stops_joined_distance <- st_transform(df_stops_joined_distance, crs = 4326)\ncommute_tracts <- st_transform(commute_tracts, crs = 4326)\n\ncommute_zoom <- commute_tracts %>% \n  st_buffer(dist = .01) %>% \n  st_bbox()\n\nnames(commute_zoom) <- NULL\n\n###leaflet\ntransit_lines_palette <- colorFactor(palette = \"Set1\", domain = commuter_transit_lines$full_route_name_id)\ntract_palette <- colorFactor(palette = \"Set1\", domain = commute_tracts$GEOID)\n\ninteractive_map <- leaflet() %>% \n  addProviderTiles(providers$CartoDB.Positron) %>% \n  addPolygons(data = allegheny,\n              color = \"#444444\",\n              stroke = TRUE,\n              fillOpacity = 0,\n              opacity = 1,\n              weight = 2,\n              group = \"Census tracts\") %>%\n  addPolygons(data = commute_tracts,\n              #color\n              color = NA,\n              #fill\n              fillColor = ~tract_palette(GEOID),\n              fillOpacity = .3,\n              \n              #label\n              label = commute_tracts$name,\n              group = \"Census tracts\") %>% \n  addPolylines(data = commuter_transit_lines,\n              color = ~transit_lines_palette(full_route_name_id),\n              label = commuter_transit_lines$full_route_name_id,\n              \n              #highlight\n              highlightOptions = highlightOptions(weight = 10, bringToFront = TRUE),\n              group = \"Transit lines and stops\"\n               ) %>% \n  addCircles(data = df_stops_joined_distance,\n             radius = 3,\n             color = ~transit_lines_palette(full_route_name_id),\n             \n             #highlight\n             highlightOptions = highlightOptions(weight = 10, bringToFront = TRUE),\n             \n             #label\n             label = str_to_title(df_stops_joined_distance$stop_name_route_id_route_name),\n             group = \"Transit lines and stops\") %>% \n  addLayersControl(overlayGroups = c(\"Census tracts\",\"Transit lines and stops\"), position = \"topleft\", \n                   options = layersControlOptions(collapsed = FALSE)) %>% \n  addMiniMap() %>% \n  fitBounds(lng1 = commute_zoom[[1]], lat1 = commute_zoom[[2]], lng2 = commute_zoom[[3]], lat2 = commute_zoom[[4]])\n\nframeWidget(interactive_map)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-92bcffa90becef51a4b5\" style=\"width:100%;height:480px;\" class=\"widgetframe html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-92bcffa90becef51a4b5\">{\"x\":{\"url\":\"index_files/figure-html//widgets/widget_unnamed-chunk-20.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/pymjs-1.3.2/pym.v1.js\"></script>\n<script src=\"../../site_libs/widgetframe-binding-0.3.1/widgetframe.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}