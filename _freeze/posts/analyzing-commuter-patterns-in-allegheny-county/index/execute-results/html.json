{
  "hash": "1d8b1951ebbf8305162126c7b08fa3ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Analyzing Commuter Patterns in Allegheny County\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [R, Pittsburgh, Allegheny County, Commuters]\ncategories: [R, Pittsburgh, Allegheny County, Commuters]\ndate: 2019-11-11\nlastmod: 2020-08-24T11:29:31-04:00\nfeatured: false\ndraft: false\nimage: featured.png\nexecute: \n  echo: true\n  warning: false\n  message: false\n---\n\n\n\nNote: high-res images of the main graphs from this post are available [here](https://raw.githubusercontent.com/conorotompkins/lodes/master/output/images/p1.png), [here](https://raw.githubusercontent.com/conorotompkins/lodes/master/output/images/p2.png), [here](https://raw.githubusercontent.com/conorotompkins/lodes/master/output/images/p3.png), and [here](https://raw.githubusercontent.com/conorotompkins/lodes/master/output/images/p4.png).\n\n###\n\nIn this post I will use networks plots to analyze patterns of commuters in Allegheny County. I use the LEHD Origin-Destination Employment Statistics (LODES) [dataset](https://lehd.ces.census.gov/data/) provided by the U.S. Census Bureau. This dataset contains summarized and anonymized estimate data regarding where people live and work. I use this data to map where Allegheny County residents live and work.\n\nIn my analysis I use many of the standard tidyverse packages, sf, tidygraph, and ggraph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(tidygraph)\nlibrary(ggraph)\n```\n:::\n\n\n\n\n\nThe first step is to read in the geographies crosswalk and the census tract geographies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeo_crosswalk <- read_csv(\"post_data/pa_xwalk.csv.gz\", col_types = cols(.default = \"c\"))\n\nallegheny_tracts <- get_decennial(geography = \"tract\",\n                                  variables = c(total_pop = \"P001001\"),\n                                  state = \"PA\",\n                                  county = \"Allegheny County\",\n                                  geometry = TRUE,\n                                  output = \"wide\",\n                                  year = 2010)\n\nst_erase <- function(x, y) {\n  st_difference(x, st_union(st_combine(y)))\n}\n\nrivers <- area_water(\"PA\", \"Allegheny\", class = \"sf\")\n```\n:::\n\n\n\nThis shows the outlines of the tracts used in the analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot() +\n  geom_sf()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nThe crosswalk file contains keys to join a variety of geographies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeo_crosswalk\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 421,545 × 43\n   tabblk2010    st    stusps stname cty   ctyname trct  trctname bgrp  bgrpname\n   <chr>         <chr> <chr>  <chr>  <chr> <chr>   <chr> <chr>    <chr> <chr>   \n 1 420912030002… 42    PA     Penns… 42091 Montgo… 4209… 2030 (M… 4209… 2 (Trac…\n 2 420912070013… 42    PA     Penns… 42091 Montgo… 4209… 2070.01… 4209… 3 (Trac…\n 3 420912070013… 42    PA     Penns… 42091 Montgo… 4209… 2070.01… 4209… 3 (Trac…\n 4 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n 5 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n 6 420710134002… 42    PA     Penns… 42071 Lancas… 4207… 134 (La… 4207… 2 (Trac…\n 7 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n 8 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n 9 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n10 420710144022… 42    PA     Penns… 42071 Lancas… 4207… 144.02 … 4207… 2 (Trac…\n# ℹ 421,535 more rows\n# ℹ 33 more variables: cbsa <chr>, cbsaname <chr>, zcta <chr>, zctaname <chr>,\n#   stplc <chr>, stplcname <chr>, ctycsub <chr>, ctycsubname <chr>,\n#   stcd116 <chr>, stcd116name <chr>, stsldl <chr>, stsldlname <chr>,\n#   stsldu <chr>, stslduname <chr>, stschool <chr>, stschoolname <chr>,\n#   stsecon <chr>, stseconname <chr>, trib <chr>, tribname <chr>, tsub <chr>,\n#   tsubname <chr>, stanrc <chr>, stanrcname <chr>, necta <chr>, …\n```\n\n\n:::\n:::\n\n\n\nNext I read in the main LODES data. This is a big file, so it takes a moment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"post_data/pa_od_main_JT00_2015.csv.gz\", col_types = cols(.default = \"c\")) %>% \n  mutate(S000 = as.numeric(S000)) %>% \n  select(h_geocode, w_geocode, S000)\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,961,712 × 3\n   h_geocode       w_geocode        S000\n   <chr>           <chr>           <dbl>\n 1 420010303001089 420010301011013     1\n 2 420410126001030 420010301011013     1\n 3 421330217111050 420010301011013     1\n 4 420010301011029 420010301011016     1\n 5 420010301011063 420010301011016     1\n 6 420010301011090 420010301011016     1\n 7 420010302001079 420010301011016     1\n 8 420010302001089 420010301011016     1\n 9 420010304003043 420010301011016     1\n10 420010307002014 420010301011016     1\n# ℹ 4,961,702 more rows\n```\n\n\n:::\n:::\n\n\n\nNext I summarize the number of commuters per home-work tract combination. The original file uses census block codes, which are too granular for this analysis. I link the blocks to census tracts and aggregate to that level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tracts_summarized <- df %>% \n  group_by(h_geocode, w_geocode) %>% \n  summarize(commuters = sum(S000)) %>% \n  ungroup() %>% \n  arrange(desc(commuters))\n\ndf_tracts_summarized <- df_tracts_summarized %>% \n  left_join(geo_crosswalk %>% select(tabblk2010, trct), by = c(\"h_geocode\" = \"tabblk2010\")) %>% \n  rename(h_tract = trct) %>% \n  left_join(geo_crosswalk %>% select(tabblk2010, trct), by = c(\"w_geocode\" = \"tabblk2010\")) %>% \n  rename(w_tract = trct)\n\ndf_tracts_summarized <- df_tracts_summarized %>% \n  group_by(h_tract, w_tract) %>% \n  summarize(commuters = sum(commuters)) %>% \n  ungroup() %>% \n  arrange(desc(commuters))\n\ndf_tracts_summarized <- df_tracts_summarized %>% \n  semi_join(allegheny_tracts, by = c(\"h_tract\" = \"GEOID\")) %>% \n  semi_join(allegheny_tracts, by = c(\"w_tract\" = \"GEOID\"))\n```\n:::\n\n\n\nThis code removes rows where the commuter lives and works in the same tract.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tracts_summarized <- df_tracts_summarized %>% \n  arrange(h_tract) %>% \n  na.omit() %>% \n  filter(!(h_tract == w_tract))\n```\n:::\n\n\n\nThis code finds the center of each tract, which I use as the nodes in the network plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts <- allegheny_tracts %>% \n  arrange(GEOID)\n\nallegheny_tracts_centroids <- cbind(allegheny_tracts,\n                                    st_coordinates(st_centroid(allegheny_tracts))) %>% \n  st_set_geometry(NULL) %>% \n  as_tibble() %>% \n  rename(x = X,\n         y = Y) %>% \n  select(GEOID, x, y)\n```\n:::\n\n\n\nThis shows that the centroids correctly appear in the center of each tract.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot() +\n  geom_sf() +\n  geom_point(data = allegheny_tracts_centroids, aes(x, y), size = .2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## EDA\n\nFirst, I do some exploratory analysis of the number of commuters in/out per tract. Since we cannot join the census geography dataframe to the LODES data directly, I reverse engineer the process by splitting the data into separate \"home\" and \"work\" dataframes, and then joining the census geography dataframe to those dataframes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_home <- df_tracts_summarized %>% \n  rename(tract = h_tract,\n         commuters_out = commuters) %>% \n  select(-w_tract) %>% \n  group_by(tract) %>% \n  summarize(commuters_out = sum(commuters_out))\n\ndf_work <- df_tracts_summarized %>% \n  rename(tract = w_tract,\n         commuters_in = commuters) %>% \n  select(-h_tract) %>% \n  group_by(tract) %>% \n  summarize(commuters_in = sum(commuters_in))\n```\n:::\n\n\n\nThis checks that there are no duplicate tracts in either dataframe:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_home %>% \n  count(tract, sort = TRUE) %>% \n  filter(n > 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 2\n# ℹ 2 variables: tract <chr>, n <int>\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_home %>% \n  count(tract, sort = TRUE) %>% \n  filter(n > 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 2\n# ℹ 2 variables: tract <chr>, n <int>\n```\n\n\n:::\n:::\n\n\n\nThis joins the separate dataframes back to the census geography dataframe:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts <- allegheny_tracts %>% \n  left_join(df_home, by = c(\"GEOID\" = \"tract\")) %>% \n  left_join(df_work, by = c(\"GEOID\" = \"tract\")) %>% \n  replace_na(list(commuters_in = 0))\n```\n:::\n\n\n\nThe tract with many more commuters \"in\" is downtown Pittsburgh.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot(aes(commuters_out, commuters_in, label = NAME)) +\n  geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot() +\n  geom_sf(aes(fill = commuters_in), color = NA) +\n  scale_fill_viridis_c() +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nThis shows which tracts have the most outflow of commuters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot() +\n  geom_sf(aes(fill = commuters_out), color = NA) +\n  scale_fill_viridis_c() +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nThe outflow of commuters tracks with the population of the tract, with some exceptions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  ggplot(aes(commuters_out, total_pop)) +\n  geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nDowntown Pittsburgh dominates in terms of inflow vs. outflow differential.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallegheny_tracts %>% \n  mutate(diff = commuters_in - commuters_out) %>% \n  ggplot() +\n  geom_sf(aes(fill = diff), color = NA) +\n  scale_fill_viridis_c(\"Commuters in minus commuters out\", direction = 1) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## Set up main graph\n\nWith the exploratory analysis done, I move on to the main task of making a geographic network plot where the nodes are the center of each census tract.\n\nFirst, I set a minimum threshhold for the number of commuters flowing between two tracts. Then, I transform the `df_tracts_summarized` data into a `tbl_graph` object, which lets it be used for network analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminimum_commuters <- 100\n\ng <- df_tracts_summarized %>% \n  as_tbl_graph(directed = TRUE)\n\ng\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 74239 edges\n#\n# A directed simple graph with 1 component\n#\n# Node Data: 402 × 1 (active)\n   name       \n   <chr>      \n 1 42003010300\n 2 42003020100\n 3 42003020300\n 4 42003030500\n 5 42003040200\n 6 42003040400\n 7 42003040500\n 8 42003040600\n 9 42003040900\n10 42003050100\n# ℹ 392 more rows\n#\n# Edge Data: 74,239 × 3\n   from    to commuters\n  <int> <int>     <dbl>\n1     1     2        73\n2     1     5        22\n3     1    64        15\n# ℹ 74,236 more rows\n```\n\n\n:::\n:::\n\n\nThe result is a list of two dataframes; one for the nodes, one for the edges.\n\nThis filters out the edges that do not meet the minimum threshhold.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng_main <- g %>% \n  activate(edges) %>% \n  filter(commuters > minimum_commuters)\n\ng_main\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 360 edges\n#\n# A directed simple graph with 136 components\n#\n# Edge Data: 360 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1     4     2       143\n 2    10     2       103\n 3    11     2       142\n 4    15     2       178\n 5    16     2       101\n 6    17     2       115\n 7    18     2       284\n 8    18   402       158\n 9    19     2       136\n10    19   402       117\n# ℹ 350 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nThis shows the edges with the most commuters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng_main %>% \n  activate(edges) %>% \n  arrange(desc(commuters))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 360 edges\n#\n# A directed simple graph with 136 components\n#\n# Edge Data: 360 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1   122     2       552\n 2    75     2       484\n 3   125     2       440\n 4    65     2       407\n 5    79     2       393\n 6   127     2       389\n 7   253     2       385\n 8   249     2       366\n 9    62     2       361\n10   228     2       361\n# ℹ 350 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nThis code sets the nodes for the graph at the center of each census tract and creates a manual layout that the network plot will use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_pos <- allegheny_tracts_centroids\n\nmanual_layout <- create_layout(graph = g_main,\n                               layout = node_pos)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 402 × 7\n   GEOID           x     y name        .ggraph.orig_index .ggraph.index circular\n   <chr>       <dbl> <dbl> <chr>                    <int>         <int> <lgl>   \n 1 42003010300 -80.0  40.4 42003010300                  1             1 FALSE   \n 2 42003020100 -80.0  40.4 42003020100                  2             2 FALSE   \n 3 42003020300 -80.0  40.5 42003020300                  3             3 FALSE   \n 4 42003030500 -80.0  40.4 42003030500                  4             4 FALSE   \n 5 42003040200 -80.0  40.4 42003040200                  5             5 FALSE   \n 6 42003040400 -79.9  40.4 42003040400                  6             6 FALSE   \n 7 42003040500 -80.0  40.4 42003040500                  7             7 FALSE   \n 8 42003040600 -80.0  40.4 42003040600                  8             8 FALSE   \n 9 42003040900 -80.0  40.4 42003040900                  9             9 FALSE   \n10 42003050100 -80.0  40.4 42003050100                 10            10 FALSE   \n# ℹ 392 more rows\n```\n\n\n:::\n:::\n\n\n\nFinally, this sets the parameters for the plot and makes the network graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlegend_title <- str_c(\"Minimum: \", minimum_commuters, \" commuters\")\n\nggraph(manual_layout) +\n  geom_sf(data = allegheny_tracts, color = \"dark grey\", fill = NA) +\n  geom_sf(data = rivers, fill = \"white\", color = NA, alpha = .5) +\n  geom_node_point(alpha = 0) +\n  geom_edge_fan(aes(edge_width = commuters, \n                    edge_alpha = commuters),\n                arrow = arrow(length = unit(.5, 'lines')), \n                start_cap = circle(.1, 'lines'),\n                end_cap = circle(.2, 'lines'),\n                color = \"white\",\n                strength = .5) +\n  scale_edge_width_continuous(legend_title, range = c(.1, 1.5)) +\n  scale_edge_alpha_continuous(legend_title, range = c(.1, .8)) +\n  scale_fill_viridis_c() +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Where do people commute from/to for work?\",\n       subtitle = \"Excludes within-tract commuters\",\n       caption = \"Based on 2015 US Census LODES dataset | @conor_tompkins\") +\n  theme_graph() +\n  theme(legend.background = element_rect(fill = \"light grey\"),\n        legend.text = element_text(color = \"black\"),\n        legend.title = element_text(color = \"black\"),\n        panel.background = element_rect(fill = \"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=1152}\n:::\n:::\n\n\n\nClearly downtown Pittsburgh attracts the most commuters. This is not surprising, but it obscures other job centers that attract employees.\n\n## Set up graph without downtown tract\n\nThis code filters out commuters that work downtown. Again, set a threshhold and filter on it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminimum_commuters <- 100\n\ng_filtered <- g %>% \n  activate(edges) %>% \n  filter(commuters > minimum_commuters)\n\ng_filtered\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 360 edges\n#\n# A directed simple graph with 136 components\n#\n# Edge Data: 360 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1     4     2       143\n 2    10     2       103\n 3    11     2       142\n 4    15     2       178\n 5    16     2       101\n 6    17     2       115\n 7    18     2       284\n 8    18   402       158\n 9    19     2       136\n10    19   402       117\n# ℹ 350 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nThis code goes into the network data and excludes edges that connect to the downtown tract.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_tract <- \"42003020100\"\n\nselected_node <- manual_layout %>% \n  filter(name != filter_tract) %>% \n  pull(.ggraph.orig_index)\n\ng_filtered <- g_filtered %>% \n  activate(edges) %>% \n  filter(to %in% selected_node)\n\ng_filtered\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 103 edges\n#\n# A directed simple graph with 333 components\n#\n# Edge Data: 103 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1    18   402       158\n 2    19   402       117\n 3    20   402       101\n 4    21   402       287\n 5    21     5       132\n 6    24   402       107\n 7    32   402       131\n 8    36   402       222\n 9    37   402       159\n10    50   402       158\n# ℹ 93 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nThis creates another layout for this plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmanual_layout_filtered <- create_layout(graph = g_filtered,\n                                        layout = node_pos)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlegend_title <- str_c(\"Minimum: \", minimum_commuters, \" commuters\")\n\nggraph(manual_layout_filtered) +\n  geom_sf(data = allegheny_tracts, size = .1, fill = NA, color = \"dark grey\") +\n  geom_sf(data = rivers, fill = \"white\", color = NA, alpha = .5) +\n  geom_edge_fan(aes(edge_width = commuters, edge_alpha = commuters\n  ),\n  arrow = arrow(length = unit(.5, 'lines')),\n  start_cap = circle(.1, 'lines'),\n  end_cap = circle(.2, 'lines'),\n  color = \"white\",\n  strength = .5) +\n  scale_edge_width_continuous(legend_title, range = c(.1, 1.5)) +\n  scale_edge_alpha_continuous(legend_title, range = c(.1, .8)) +\n  scale_fill_viridis_c() +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Where do people commute from/to for work?\",\n       subtitle = \"Excludes within-tract commuters and commuters to downtown tract\",\n       caption = \"Based on 2015 US Census LODES dataset | @conor_tompkins\") +\n  theme_graph() +\n  theme(legend.background = element_rect(fill = \"light grey\"),\n        legend.text = element_text(color = \"black\"),\n        legend.title = element_text(color = \"black\"),\n        panel.background = element_rect(fill = \"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-28-1.png){width=1152}\n:::\n:::\n\n\n\n## Set up facted graphs\n\nThis code creates a faceted plot that focuses on the top 5 tracts in terms of commuter outflow:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminimum_commuters <- 5\n\ntop_work_tracts <- df_home %>% \n  arrange(desc(commuters_out)) %>% \n  top_n(5, commuters_out) %>% \n  select(tract)\n\ng_facet <- g %>% \n  activate(edges) %>% \n  left_join(manual_layout %>% select(.ggraph.index, name), by = c(\"from\" = \".ggraph.index\")) %>% \n  semi_join(top_work_tracts, by = c(\"name\" = \"tract\")) %>% \n  filter(commuters > minimum_commuters)\n\ng_facet %>% \n  arrange(desc(commuters)) %>% \n  activate(edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 477 edges\n#\n# A directed simple graph with 237 components\n#\n# Edge Data: 477 × 4 (active)\n    from    to commuters name       \n   <int> <int>     <dbl> <chr>      \n 1   122     2       552 42003409000\n 2   125     2       440 42003412001\n 3   127     2       389 42003413100\n 4   192   202       311 42003453004\n 5   150     2       300 42003426300\n 6   192     2       294 42003453004\n 7   125   402       241 42003412001\n 8   192   190       209 42003453004\n 9   192   189       180 42003453004\n10   122   124       170 42003409000\n# ℹ 467 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmanual_layout_faceted <- create_layout(graph = g_facet,\n                                       layout = node_pos)\nmanual_layout_faceted %>% \n  as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 402 × 7\n   GEOID           x     y name        .ggraph.orig_index .ggraph.index circular\n   <chr>       <dbl> <dbl> <chr>                    <int>         <int> <lgl>   \n 1 42003010300 -80.0  40.4 42003010300                  1             1 FALSE   \n 2 42003020100 -80.0  40.4 42003020100                  2             2 FALSE   \n 3 42003020300 -80.0  40.5 42003020300                  3             3 FALSE   \n 4 42003030500 -80.0  40.4 42003030500                  4             4 FALSE   \n 5 42003040200 -80.0  40.4 42003040200                  5             5 FALSE   \n 6 42003040400 -79.9  40.4 42003040400                  6             6 FALSE   \n 7 42003040500 -80.0  40.4 42003040500                  7             7 FALSE   \n 8 42003040600 -80.0  40.4 42003040600                  8             8 FALSE   \n 9 42003040900 -80.0  40.4 42003040900                  9             9 FALSE   \n10 42003050100 -80.0  40.4 42003050100                 10            10 FALSE   \n# ℹ 392 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlegend_title <- str_c(\"Minimum: \", minimum_commuters, \" commuters\")\n\nggraph(manual_layout_faceted) +\n  geom_sf(data = allegheny_tracts, size = .1, fill = NA, color = \"dark grey\") +\n  geom_sf(data = rivers, fill = \"white\", color = NA, alpha = .5) +\n  geom_edge_fan(aes(edge_width = commuters, edge_alpha = commuters),\n                arrow = arrow(length = unit(.5, 'lines')),\n                start_cap = circle(.1, 'lines'),\n                end_cap = circle(.2, 'lines'),\n                color = \"red\",\n                strength = .5) +\n  facet_edges(~name) +\n  scale_edge_width_continuous(legend_title, range = c(.1, 1.5)) +\n  scale_edge_alpha_continuous(legend_title, range = c(.1, 1)) +\n  scale_fill_viridis_c() +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Where do people commute from/to for work?\",\n       subtitle = \"Not including within-tract commuters\",\n       caption = \"Based on 2015 US Census LODES dataset | @conor_tompkins\") +\n  theme_graph() +\n  theme(legend.background = element_rect(fill = \"light grey\"),\n        legend.text = element_text(color = \"black\"),\n        legend.title = element_text(color = \"black\"),\n        panel.background = element_rect(fill = \"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-31-1.png){width=1152}\n:::\n:::\n\n\n\n## Zoom in on one tract\nThere also may be tracts of interest outside of the main commuter inflow/outflow tracts. This code creates a framework for filtering on commuters from a selected tract and zooming in on that tract.\n\nSet the threshhold and filter:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminimum_commuters <- 15\n\ng_filtered <- g %>% \n  activate(edges) %>% \n  filter(commuters > minimum_commuters)\n\ng_filtered\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 5799 edges\n#\n# A directed simple graph with 11 components\n#\n# Edge Data: 5,799 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1     1     2        73\n 2     1     5        22\n 3     2     5        87\n 4     2   402        75\n 5     2     1        37\n 6     2   202        35\n 7     2    50        34\n 8     2   163        33\n 9     2     9        32\n10     2   400        31\n# ℹ 5,789 more rows\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nThis code gets the commuter outflow data for one tract and creates `allegheny_tracts_highlight`, which will be used to highlight the tract of interest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_tract <- \"42003473500\"\n\nallegheny_tracts_highlight <- allegheny_tracts %>% \n  semi_join(df_tracts_summarized %>% \n              filter(h_tract == filter_tract), by = c(\"GEOID\" = \"w_tract\")) %>% \n  filter(commuters_in > minimum_commuters)\n\nallegheny_tracts_highlight\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 208 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.36087 ymin: 40.20845 xmax: -79.70383 ymax: 40.67494\nGeodetic CRS:  NAD83\n# A tibble: 208 × 6\n   GEOID    NAME  total_pop                  geometry commuters_out commuters_in\n * <chr>    <chr>     <dbl>        <MULTIPOLYGON [°]>         <dbl>        <dbl>\n 1 4200301… Cens…      6600 (((-79.98077 40.43836, -…           390         5470\n 2 4200302… Cens…      3629 (((-79.9908 40.44442, -7…          1029        58444\n 3 4200302… Cens…       616 (((-79.98062 40.45904, -…           415         7155\n 4 4200304… Cens…      2604 (((-79.96802 40.4429, -7…           428        12340\n 5 4200304… Cens…      2488 (((-79.94652 40.44508, -…           357          955\n 6 4200304… Cens…      3694 (((-79.95497 40.4371, -7…           290         1817\n 7 4200304… Cens…      2969 (((-79.94986 40.43443, -…           805         7822\n 8 4200305… Cens…      2057 (((-79.96206 40.44863, -…           800          235\n 9 4200307… Cens…      2197 (((-79.93137 40.45274, -…           769         1343\n10 4200307… Cens…      2997 (((-79.92533 40.45499, -…          1367         1277\n# ℹ 198 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nselected_node <- manual_layout %>% \n  filter(name == filter_tract) %>% \n  pull(.ggraph.orig_index)\n\ng_filtered <- g_filtered %>% \n  activate(edges) %>% \n  filter(from == selected_node)\n\ng_filtered\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 402 nodes and 17 edges\n#\n# A rooted forest with 385 trees\n#\n# Edge Data: 17 × 3 (active)\n    from    to commuters\n   <int> <int>     <dbl>\n 1   233     2       286\n 2   233   402        67\n 3   233     5        46\n 4   233   202        41\n 5   233   229        40\n 6   233   217        33\n 7   233   189        28\n 8   233   190        26\n 9   233   218        24\n10   233     3        23\n11   233     1        22\n12   233   234        21\n13   233   249        21\n14   233   241        17\n15   233    50        16\n16   233   163        16\n17   233   375        16\n#\n# Node Data: 402 × 1\n  name       \n  <chr>      \n1 42003010300\n2 42003020100\n3 42003020300\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\nSet the layout for the graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmanual_layout_filtered <- create_layout(graph = g_filtered,\n                                        layout = node_pos)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 402 × 7\n   GEOID           x     y name        .ggraph.orig_index .ggraph.index circular\n   <chr>       <dbl> <dbl> <chr>                    <int>         <int> <lgl>   \n 1 42003010300 -80.0  40.4 42003010300                  1             1 FALSE   \n 2 42003020100 -80.0  40.4 42003020100                  2             2 FALSE   \n 3 42003020300 -80.0  40.5 42003020300                  3             3 FALSE   \n 4 42003030500 -80.0  40.4 42003030500                  4             4 FALSE   \n 5 42003040200 -80.0  40.4 42003040200                  5             5 FALSE   \n 6 42003040400 -79.9  40.4 42003040400                  6             6 FALSE   \n 7 42003040500 -80.0  40.4 42003040500                  7             7 FALSE   \n 8 42003040600 -80.0  40.4 42003040600                  8             8 FALSE   \n 9 42003040900 -80.0  40.4 42003040900                  9             9 FALSE   \n10 42003050100 -80.0  40.4 42003050100                 10            10 FALSE   \n# ℹ 392 more rows\n```\n\n\n:::\n:::\n\n\n\nThis will be used to zoom in on the selected tract:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzoom_x <- manual_layout_filtered %>% \n  filter(.ggraph.orig_index == selected_node) %>% \n  pull(x)\n\nzoom_y <- manual_layout_filtered %>% \n  filter(.ggraph.orig_index == selected_node) %>% \n  pull(y)\n\nzoom_magnitude <- .25\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlegend_title <- str_c(\"Minimum: \", minimum_commuters, \" commuters\")\n\nggraph(manual_layout_filtered) +\n  geom_sf(data = allegheny_tracts, size = .1, fill = NA) +\n  geom_sf(data = rivers, fill = \"white\", color = NA, alpha = .5) +\n  geom_sf(data = allegheny_tracts %>%  filter(GEOID == filter_tract), \n          fill = \"grey\") +\n  geom_edge_fan(aes(edge_width = commuters),\n                arrow = arrow(length = unit(.5, 'lines')),\n                start_cap = circle(.1, 'lines'),\n                end_cap = circle(.2, 'lines'),\n                color = \"red\",\n                strength = .5) +\n  coord_sf(xlim = c(zoom_x - zoom_magnitude, zoom_x + zoom_magnitude), \n           ylim = c(zoom_y - zoom_magnitude, zoom_y + zoom_magnitude)) +\n  scale_edge_width_continuous(legend_title, range = c(.1, 1.5)) +\n  scale_edge_alpha_continuous(legend_title, range = c(.1, .8)) +\n  scale_fill_viridis_c() +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Where do people commute from/to for work?\",\n       subtitle = str_c(\"From tract\", filter_tract, sep = \" \"),\n       caption = \"Based on 2015 US Census LODES dataset | @conor_tompkins\") +\n  theme_graph() +\n  theme(legend.background = element_rect(fill = \"light grey\"),\n        legend.text = element_text(color = \"black\"),\n        legend.title = element_text(color = \"black\"),\n        panel.background = element_rect(fill = \"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-37-1.png){width=1152}\n:::\n:::\n\n\n\n# References\n* http://www.robertmanduca.com/projects/jobs.html\n* https://lehd.ces.census.gov/data/\n* https://lehd.ces.census.gov/data/lodes/LODES7/LODESTechDoc7.3.pdf\n* https://walkerke.github.io/tidycensus/articles/basic-usage.html",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}