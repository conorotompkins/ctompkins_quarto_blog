{
  "hash": "8336b6ef3bd2afa19221952232ac3905",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Exploring 311 Data With PCA\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [Census, Pittsburgh, WPRDC]\ncategories: [Census, Pittsburgh, WPRDC]\ndate: 2018-07-19\nlastmod: 2020-09-27\nfeatured: false\ndraft: false\nexecute: \n  echo: true\n  warning: false\n  message: false\n---\n\n\n# Principal Component Analysis in R\nPrincipal Component Analysis is an unsupervised method that reduces the number of dimensions in a dataset and highlights where the data varies. We will use PCA to analyze the 311 dataset from the [WPRDC](https://data.wprdc.org/dataset/311-data).\n\n## Setup\n\n### Install packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"tidyverse\", \"lubridate\", \"broom\", \"ggfortify\", \"ggrepel\", \"janitor\"))\n```\n:::\n\n\n\n### Set up your environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(broom)\nlibrary(ggfortify)\nlibrary(ggrepel)\nlibrary(janitor)\n\noptions(scipen = 999, digits = 4)\nset.seed(1234)\n\ntheme_set(theme_bw())\n```\n:::\n\n\n\n## Load the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"https://raw.githubusercontent.com/conorotompkins/pittsburgh_311/master/data/pittsburgh_311.csv\", progress = FALSE) %>% \n  clean_names() %>% \n  mutate(date = ymd(str_sub(created_on, 1, 10)),\n         month = month(date, label = TRUE)) %>% \n  filter(date < \"2018-07-19\") -> df\n```\n:::\n\n\n\n## Prep the data\nCreate a dataframe of the top request types\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df %>% \n  count(request_type, sort = TRUE) %>% \n  filter(n > 400)-> df_top_requests)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 84 × 2\n   request_type                             n\n   <chr>                                <int>\n 1 Potholes                             25202\n 2 Weeds/Debris                         16503\n 3 Building Maintenance                 10469\n 4 Snow/Ice removal                      7006\n 5 Refuse Violations                     6515\n 6 Abandoned Vehicle (parked on street)  5877\n 7 Missed Pick Up                        4689\n 8 Replace/Repair a Sign                 4445\n 9 Building Without a Permit             4404\n10 Litter                                4198\n# ℹ 74 more rows\n```\n\n\n:::\n:::\n\n\n\nCount the number of requests per month by request type, filter for the top request types, and fill in gaps in the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df %>%\n  semi_join(df_top_requests) %>% \n  group_by(request_type, month) %>% \n  summarize(n = n()) %>% \n  ungroup() %>%\n  complete(request_type, month) %>% \n  replace_na(replace = list(n = 0)) -> df_months)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,008 × 3\n   request_type                         month     n\n   <chr>                                <ord> <int>\n 1 Abandoned Vehicle (parked on street) Jan     523\n 2 Abandoned Vehicle (parked on street) Feb     427\n 3 Abandoned Vehicle (parked on street) Mar     452\n 4 Abandoned Vehicle (parked on street) Apr     417\n 5 Abandoned Vehicle (parked on street) May     488\n 6 Abandoned Vehicle (parked on street) Jun     466\n 7 Abandoned Vehicle (parked on street) Jul     457\n 8 Abandoned Vehicle (parked on street) Aug     596\n 9 Abandoned Vehicle (parked on street) Sep     525\n10 Abandoned Vehicle (parked on street) Oct     571\n# ℹ 998 more rows\n```\n\n\n:::\n:::\n\n\n\nCalculate the percentage of a request type for each month\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_months %>% \n  group_by(request_type) %>% \n  mutate(request_type_total = sum(n),\n         month_percentage = n / request_type_total) -> df_months)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,008 × 5\n# Groups:   request_type [84]\n   request_type                  month     n request_type_total month_percentage\n   <chr>                         <ord> <int>              <int>            <dbl>\n 1 Abandoned Vehicle (parked on… Jan     523               5877           0.0890\n 2 Abandoned Vehicle (parked on… Feb     427               5877           0.0727\n 3 Abandoned Vehicle (parked on… Mar     452               5877           0.0769\n 4 Abandoned Vehicle (parked on… Apr     417               5877           0.0710\n 5 Abandoned Vehicle (parked on… May     488               5877           0.0830\n 6 Abandoned Vehicle (parked on… Jun     466               5877           0.0793\n 7 Abandoned Vehicle (parked on… Jul     457               5877           0.0778\n 8 Abandoned Vehicle (parked on… Aug     596               5877           0.101 \n 9 Abandoned Vehicle (parked on… Sep     525               5877           0.0893\n10 Abandoned Vehicle (parked on… Oct     571               5877           0.0972\n# ℹ 998 more rows\n```\n\n\n:::\n:::\n\n\n\nCheck for bad data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_months %>% \n  filter(is.na(month_percentage) | is.nan(month_percentage))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 5\n# Groups:   request_type [0]\n# ℹ 5 variables: request_type <chr>, month <ord>, n <int>,\n#   request_type_total <int>, month_percentage <dbl>\n```\n\n\n:::\n:::\n\n\n\nSpread the data to turn the months into the columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_months %>% \n  select(request_type, month, month_percentage) %>% \n  spread(month, month_percentage) %>% \n  ungroup() -> df_months)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 84 × 13\n   request_type     Jan     Feb    Mar    Apr    May    Jun    Jul    Aug    Sep\n   <chr>          <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 Abandoned V… 0.0890  0.0727  0.0769 0.0710 0.0830 0.0793 0.0778 0.101  0.0893\n 2 Barking Dog  0.0563  0.0608  0.0608 0.0631 0.104  0.101  0.0788 0.113  0.124 \n 3 Board Up (P… 0.0395  0.0482  0.0658 0.0943 0.114  0.0899 0.110  0.123  0.0855\n 4 Broken Side… 0.0337  0.155   0.148  0.0872 0.105  0.0964 0.0696 0.0735 0.0528\n 5 Building Ma… 0.0708  0.0919  0.103  0.0739 0.0842 0.0829 0.0725 0.0919 0.0776\n 6 Building Wi… 0.0842  0.0697  0.0636 0.0577 0.105  0.0883 0.0924 0.0815 0.0829\n 7 Catch Basin… 0.0636  0.0377  0.0778 0.0748 0.0984 0.132  0.0825 0.127  0.105 \n 8 City Source… 0.00527 0.00246 0.0105 0.0428 0.196  0.213  0.195  0.164  0.0808\n 9 City Steps,… 0.0443  0.0180  0.0148 0.0197 0.116  0.216  0.203  0.146  0.118 \n10 City Steps,… 0.0265  0.0305  0.0713 0.0509 0.128  0.120  0.136  0.128  0.108 \n# ℹ 74 more rows\n# ℹ 3 more variables: Oct <dbl>, Nov <dbl>, Dec <dbl>\n```\n\n\n:::\n:::\n\n\n\nCheck that they all add up to 1 across the rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_months %>% \n  select(Jan:Dec) %>% \n  mutate(row_sum = rowSums(.)) %>% \n  select(row_sum, everything()) -> test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 84 × 13\n   row_sum     Jan     Feb    Mar    Apr    May    Jun    Jul    Aug    Sep\n     <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1       1 0.0890  0.0727  0.0769 0.0710 0.0830 0.0793 0.0778 0.101  0.0893\n 2       1 0.0563  0.0608  0.0608 0.0631 0.104  0.101  0.0788 0.113  0.124 \n 3       1 0.0395  0.0482  0.0658 0.0943 0.114  0.0899 0.110  0.123  0.0855\n 4       1 0.0337  0.155   0.148  0.0872 0.105  0.0964 0.0696 0.0735 0.0528\n 5       1 0.0708  0.0919  0.103  0.0739 0.0842 0.0829 0.0725 0.0919 0.0776\n 6       1 0.0842  0.0697  0.0636 0.0577 0.105  0.0883 0.0924 0.0815 0.0829\n 7       1 0.0636  0.0377  0.0778 0.0748 0.0984 0.132  0.0825 0.127  0.105 \n 8       1 0.00527 0.00246 0.0105 0.0428 0.196  0.213  0.195  0.164  0.0808\n 9       1 0.0443  0.0180  0.0148 0.0197 0.116  0.216  0.203  0.146  0.118 \n10       1 0.0265  0.0305  0.0713 0.0509 0.128  0.120  0.136  0.128  0.108 \n# ℹ 74 more rows\n# ℹ 3 more variables: Oct <dbl>, Nov <dbl>, Dec <dbl>\n```\n\n\n:::\n:::\n\n\n\n### Perform basic comparisons\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_months %>% \n  ggplot(aes(Jan, Jul)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nRemember that each dot represents a request type, and the month shows what % of that request type occurred that month\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_months %>% \n  ggplot(aes(Apr, Oct)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nIt is not feasible to plot all the months against each other. PCA can help by condensing the columns and increasing the variance. PCA creates eigenvectors that represents the data in a concentrated way. Eigenvectors and eigenvalues do not represent observed data. They are calculated representations of the data. We will refer to eigenvectors as \"principal components\".\n\nIn this case, where our data is measured by months in a year, each principal component could loosely be compared to a season.  \n\n## Prep the data for PCA\nThe PCA function requires an all-numeric dataframe, so drop the request types into the dataframe metadata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_months %>% \n  ungroup() %>% \n  remove_rownames() %>% \n  column_to_rownames(var = \"request_type\") -> df_months_pca1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                                 Jan      Feb      Mar      Apr\nAbandoned Vehicle (parked on street)        0.088991 0.072656 0.076910 0.070955\nBarking Dog                                 0.056306 0.060811 0.060811 0.063063\nBoard Up (PLI referral to DPW)              0.039474 0.048246 0.065789 0.094298\nBroken Sidewalk                             0.033665 0.154552 0.147666 0.087223\nBuilding Maintenance                        0.070780 0.091890 0.103353 0.073933\nBuilding Without a Permit                   0.084242 0.069709 0.063579 0.057675\nCatch Basin, Clogged                        0.063642 0.037714 0.077784 0.074838\nCity Source (CDBG)                          0.005267 0.002458 0.010534 0.042837\nCity Steps, Need Cleared                    0.044262 0.018033 0.014754 0.019672\nCity Steps, Need Repaired                   0.026477 0.030550 0.071283 0.050916\nCollapsed Catch Basin                       0.064220 0.053899 0.061927 0.075688\nCommercial Refuse/Dumpsters                 0.079430 0.079430 0.089613 0.077393\nCurb /Broken/Deteriorated                   0.042373 0.048729 0.072034 0.110169\nCurb/Request for Asphalt Windrow            0.038660 0.020619 0.028351 0.085052\nDead Animal                                 0.038181 0.032566 0.043234 0.076923\nDead tree (Public property)                 0.034516 0.028763 0.049856 0.066155\nDrainage/Leak                               0.141304 0.050000 0.035870 0.083696\nDrug Enforcement                            0.077085 0.049755 0.065172 0.079187\nDumping, Private Property                   0.064315 0.076763 0.120332 0.093361\nDumpster (on Street)                        0.070866 0.048819 0.042520 0.088189\nEarly Set Out                               0.072444 0.069736 0.062288 0.063643\nExcessive Noise/Disturbances                0.057377 0.047131 0.056011 0.085383\nField                                       0.016432 0.014085 0.042254 0.110329\nFire Safety System Not Working              0.093750 0.185547 0.128906 0.077474\nGraffiti, Documentation                     0.057116 0.054307 0.103933 0.102060\nGraffiti, Removal                           0.088710 0.111290 0.098387 0.046774\nHydrant                                     0.121771 0.062731 0.075646 0.053506\nIllegal Dumping                             0.065672 0.057214 0.076617 0.106965\nIllegal Parking                             0.095682 0.075074 0.081943 0.079735\nJunk Vehicles                               0.079384 0.093602 0.114929 0.068720\nLeak                                        0.171456 0.097418 0.048709 0.044812\nLeaves/Street Cleaning                      0.028967 0.031486 0.030227 0.059194\nLitter                                      0.064316 0.064555 0.085755 0.093378\nLitter Can, Public                          0.064777 0.049393 0.060729 0.069636\nMaintenance Issue                           0.026455 0.031746 0.039153 0.078307\nMayor's Office                              0.158455 0.033289 0.023968 0.027963\nMissed Blue Bag                             0.094002 0.042077 0.051925 0.068935\nMissed Pick Up                              0.076775 0.048198 0.047345 0.058861\nNeed Potable Water                          0.002398 0.914868 0.001199 0.003597\nOperating Without a License                 0.041215 0.021692 0.149675 0.114967\nOvergrowth                                  0.005058 0.007867 0.006462 0.019106\nParking Authority                           0.086022 0.075269 0.064516 0.105376\nPatrol                                      0.063164 0.047816 0.071429 0.081464\nPaving Concern/Problem                      0.054819 0.043324 0.042440 0.071618\nPaving Request                              0.052950 0.047504 0.108321 0.114675\nPermit Parking (Residential Parking Permit) 0.107062 0.075171 0.063781 0.079727\nPlayground                                  0.015038 0.024436 0.043233 0.093985\nPotholes                                    0.123324 0.052972 0.105230 0.112570\nPruning (city tree)                         0.024019 0.025372 0.044317 0.057510\nPublic Right of Way                         0.033397 0.029580 0.020992 0.057252\nQuestion                                    0.079824 0.064739 0.043997 0.024513\nReferral                                    0.099161 0.050725 0.046148 0.049962\nRefuse Violations                           0.079202 0.059708 0.065848 0.084728\nReplace/Repair a Sign                       0.067492 0.053093 0.080315 0.084814\nRequest New Sign                            0.069169 0.049768 0.059047 0.097005\nRetaining Wall Maintenance                  0.066239 0.091880 0.115385 0.096154\nRodent control                              0.040957 0.033594 0.041417 0.052462\nRoot prune                                  0.022321 0.038690 0.053571 0.098214\nSidewalk Obstruction                        0.052799 0.042621 0.044529 0.052163\nSidewalk, Lack of Snow/Ice Removal          0.767726 0.090465 0.002445 0.002445\nSinkhole                                    0.103995 0.058973 0.062143 0.066582\nSmoke detectors                             0.118421 0.064145 0.062500 0.092105\nSnow/Ice removal                            0.681273 0.135027 0.005995 0.002712\nSpeeding                                    0.063973 0.060606 0.084175 0.094276\nStreet Cleaning/Sweeping                    0.027306 0.026790 0.035033 0.102009\nStreet Light - Repair                       0.078803 0.055112 0.067830 0.044888\nStreet Obstruction/Closure                  0.126273 0.040733 0.081466 0.061100\nThank you - DPW                             0.136264 0.046154 0.032967 0.065934\nTraffic                                     0.065356 0.053666 0.061637 0.073326\nTraffic or Pedestrian Signal, Repair        0.089659 0.047221 0.069934 0.069337\nTraffic or Pedestrian Signal, Request       0.056641 0.029297 0.099609 0.087891\nTree Fallen Across Road                     0.042589 0.031516 0.051959 0.034923\nTree Fallen Across Sidewalk                 0.034125 0.028190 0.044510 0.044510\nTree Issues                                 0.038384 0.056566 0.076768 0.048485\nTree Removal                                0.042949 0.036507 0.071582 0.074445\nUnpermitted Electrical Work                 0.145055 0.012088 0.030769 0.019780\nUnpermitted HVAC Work                       0.108516 0.045330 0.064560 0.048077\nUtility Cut - Other                         0.114889 0.067995 0.052755 0.059789\nUtility Cut - PWSA                          0.202261 0.050251 0.057789 0.075377\nUtility Pole                                0.065728 0.075117 0.049296 0.075117\nVacant Building                             0.088199 0.083230 0.096066 0.048861\nWeeds/Debris                                0.029631 0.024965 0.035751 0.045083\nWires                                       0.060651 0.071006 0.060651 0.078402\nZoning Issue                                0.055000 0.065000 0.080833 0.082500\n                                                  May       Jun      Jul\nAbandoned Vehicle (parked on street)        0.0830356 0.0792922 0.077761\nBarking Dog                                 0.1036036 0.1013514 0.078829\nBoard Up (PLI referral to DPW)              0.1140351 0.0899123 0.109649\nBroken Sidewalk                             0.1048202 0.0964040 0.069625\nBuilding Maintenance                        0.0841532 0.0829115 0.072500\nBuilding Without a Permit                   0.1049046 0.0883288 0.092416\nCatch Basin, Clogged                        0.0984090 0.1319976 0.082499\nCity Source (CDBG)                          0.1955758 0.2134831 0.195225\nCity Steps, Need Cleared                    0.1163934 0.2163934 0.203279\nCity Steps, Need Repaired                   0.1283096 0.1201629 0.136456\nCollapsed Catch Basin                       0.1100917 0.0917431 0.083716\nCommercial Refuse/Dumpsters                 0.0529532 0.1038697 0.105906\nCurb /Broken/Deteriorated                   0.1525424 0.1122881 0.116525\nCurb/Request for Asphalt Windrow            0.1430412 0.2113402 0.155928\nDead Animal                                 0.0713083 0.1021898 0.139809\nDead tree (Public property)                 0.1246405 0.1447747 0.154362\nDrainage/Leak                               0.0902174 0.1043478 0.102174\nDrug Enforcement                            0.0988087 0.1023125 0.088998\nDumping, Private Property                   0.0746888 0.0622407 0.064315\nDumpster (on Street)                        0.0787402 0.1354331 0.105512\nEarly Set Out                               0.0886933 0.0873392 0.111713\nExcessive Noise/Disturbances                0.0887978 0.0758197 0.075137\nField                                       0.1854460 0.1384977 0.150235\nFire Safety System Not Working              0.1139323 0.0572917 0.047526\nGraffiti, Documentation                     0.1207865 0.1254682 0.073970\nGraffiti, Removal                           0.0338710 0.0596774 0.091935\nHydrant                                     0.0922509 0.0571956 0.064576\nIllegal Dumping                             0.1000000 0.1228856 0.113930\nIllegal Parking                             0.0765456 0.0691855 0.059863\nJunk Vehicles                               0.0864929 0.0710900 0.104265\nLeak                                        0.0491963 0.0526059 0.057964\nLeaves/Street Cleaning                      0.0629723 0.0541562 0.021411\nLitter                                      0.0826584 0.0855169 0.098380\nLitter Can, Public                          0.0923077 0.0995951 0.127126\nMaintenance Issue                           0.1417989 0.1185185 0.135450\nMayor's Office                              0.0319574 0.1824234 0.065246\nMissed Blue Bag                             0.0841540 0.1020591 0.087735\nMissed Pick Up                              0.1027938 0.1123907 0.118789\nNeed Potable Water                          0.0011990 0.0023981 0.000000\nOperating Without a License                 0.4338395 0.0542299 0.028200\nOvergrowth                                  0.1219444 0.2489463 0.234335\nParking Authority                           0.0860215 0.0838710 0.081720\nPatrol                                      0.1015348 0.0879575 0.095041\nPaving Concern/Problem                      0.1114058 0.1255526 0.085765\nPaving Request                              0.1397882 0.1458396 0.118306\nPermit Parking (Residential Parking Permit) 0.0569476 0.0706150 0.079727\nPlayground                                  0.1184211 0.1691729 0.159774\nPotholes                                    0.1346322 0.1150702 0.107095\nPruning (city tree)                         0.1234777 0.1742219 0.168133\nPublic Right of Way                         0.1316794 0.1650763 0.154580\nQuestion                                    0.0483972 0.0936518 0.122564\nReferral                                    0.0362319 0.0846682 0.129291\nRefuse Violations                           0.0784344 0.0983883 0.100844\nReplace/Repair a Sign                       0.1196850 0.1113611 0.094713\nRequest New Sign                            0.0932096 0.0927879 0.097427\nRetaining Wall Maintenance                  0.0961538 0.0982906 0.085470\nRodent control                              0.0745513 0.1099862 0.141279\nRoot prune                                  0.1190476 0.1264881 0.163690\nSidewalk Obstruction                        0.0807888 0.1075064 0.123410\nSidewalk, Lack of Snow/Ice Removal          0.0097800 0.0000000 0.002445\nSinkhole                                    0.0786303 0.1122384 0.128725\nSmoke detectors                             0.0871711 0.1348684 0.046053\nSnow/Ice removal                            0.0008564 0.0001427 0.000000\nSpeeding                                    0.0976431 0.0909091 0.104377\nStreet Cleaning/Sweeping                    0.1257084 0.1298300 0.123132\nStreet Light - Repair                       0.0498753 0.0675810 0.097257\nStreet Obstruction/Closure                  0.0549898 0.0509165 0.087576\nThank you - DPW                             0.0769231 0.0967033 0.105495\nTraffic                                     0.0887354 0.0600425 0.054729\nTraffic or Pedestrian Signal, Repair        0.0854752 0.1040048 0.086671\nTraffic or Pedestrian Signal, Request       0.1074219 0.1191406 0.085938\nTree Fallen Across Road                     0.1345826 0.2206133 0.137990\nTree Fallen Across Sidewalk                 0.1424332 0.1958457 0.126113\nTree Issues                                 0.1010101 0.1010101 0.129293\nTree Removal                                0.1295634 0.1410165 0.118826\nUnpermitted Electrical Work                 0.1054945 0.1230769 0.085714\nUnpermitted HVAC Work                       0.1689560 0.0879121 0.085165\nUtility Cut - Other                         0.0797186 0.0738570 0.082063\nUtility Cut - PWSA                          0.1005025 0.0967337 0.095477\nUtility Pole                                0.1126761 0.1244131 0.107981\nVacant Building                             0.0683230 0.0608696 0.064182\nWeeds/Debris                                0.1373690 0.1666364 0.157062\nWires                                       0.0961538 0.1434911 0.087278\nZoning Issue                                0.0958333 0.0866667 0.103333\n                                                  Aug      Sep       Oct\nAbandoned Vehicle (parked on street)        0.1014123 0.089331 0.0971584\nBarking Dog                                 0.1126126 0.123874 0.1126126\nBoard Up (PLI referral to DPW)              0.1228070 0.085526 0.0877193\nBroken Sidewalk                             0.0734507 0.052793 0.0849273\nBuilding Maintenance                        0.0918903 0.077562 0.0787086\nBuilding Without a Permit                   0.0815168 0.082879 0.1128520\nCatch Basin, Clogged                        0.1266942 0.104891 0.0931055\nCity Source (CDBG)                          0.1639747 0.080758 0.0582865\nCity Steps, Need Cleared                    0.1459016 0.118033 0.0557377\nCity Steps, Need Repaired                   0.1283096 0.107943 0.0855397\nCollapsed Catch Basin                       0.1238532 0.113532 0.0986239\nCommercial Refuse/Dumpsters                 0.1344196 0.071283 0.0712831\nCurb /Broken/Deteriorated                   0.1186441 0.084746 0.0572034\nCurb/Request for Asphalt Windrow            0.1082474 0.079897 0.0605670\nDead Animal                                 0.1235261 0.112296 0.1274565\nDead tree (Public property)                 0.1236817 0.102589 0.0882071\nDrainage/Leak                               0.1076087 0.058696 0.0782609\nDrug Enforcement                            0.1135249 0.117730 0.0946041\nDumping, Private Property                   0.1327801 0.076763 0.1016598\nDumpster (on Street)                        0.1070866 0.086614 0.0881890\nEarly Set Out                               0.1570752 0.080569 0.0663507\nExcessive Noise/Disturbances                0.0881148 0.090164 0.1038251\nField                                       0.1197183 0.098592 0.0610329\nFire Safety System Not Working              0.0449219 0.050781 0.0651042\nGraffiti, Documentation                     0.0608614 0.067416 0.1207865\nGraffiti, Removal                           0.1048387 0.125806 0.0935484\nHydrant                                     0.1254613 0.077491 0.0867159\nIllegal Dumping                             0.0651741 0.068657 0.0726368\nIllegal Parking                             0.0969087 0.103042 0.0991168\nJunk Vehicles                               0.0912322 0.072275 0.0758294\nLeak                                        0.1066732 0.080857 0.0681929\nLeaves/Street Cleaning                      0.0440806 0.012594 0.0642317\nLitter                                      0.1202954 0.095760 0.0824202\nLitter Can, Public                          0.1246964 0.110121 0.0850202\nMaintenance Issue                           0.1174603 0.113228 0.1047619\nMayor's Office                              0.1118509 0.114514 0.0892144\nMissed Blue Bag                             0.1056401 0.089526 0.0957923\nMissed Pick Up                              0.1106846 0.098315 0.0835999\nNeed Potable Water                          0.0731415 0.000000 0.0000000\nOperating Without a License                 0.0390456 0.021692 0.0455531\nOvergrowth                                  0.1944366 0.104805 0.0396179\nParking Authority                           0.1032258 0.090323 0.0731183\nPatrol                                      0.1097993 0.103306 0.1151122\nPaving Concern/Problem                      0.0813439 0.089302 0.1432361\nPaving Request                              0.0928896 0.075340 0.0490166\nPermit Parking (Residential Parking Permit) 0.1321185 0.102506 0.0956720\nPlayground                                  0.1672932 0.090226 0.0733083\nPotholes                                    0.0759860 0.050155 0.0442425\nPruning (city tree)                         0.1586604 0.082206 0.0801759\nPublic Right of Way                         0.1832061 0.094466 0.0620229\nQuestion                                    0.1646763 0.065996 0.1451917\nReferral                                    0.1525553 0.089245 0.1060259\nRefuse Violations                           0.1122026 0.085035 0.0968534\nReplace/Repair a Sign                       0.0899888 0.088189 0.0758155\nRequest New Sign                            0.1100801 0.113454 0.0889920\nRetaining Wall Maintenance                  0.0769231 0.055556 0.1089744\nRodent control                              0.1385182 0.125633 0.1214910\nRoot prune                                  0.1056548 0.096726 0.0937500\nSidewalk Obstruction                        0.1246819 0.117048 0.0966921\nSidewalk, Lack of Snow/Ice Removal          0.0000000 0.002445 0.0000000\nSinkhole                                    0.1230184 0.088142 0.0798985\nSmoke detectors                             0.0756579 0.041118 0.1118421\nSnow/Ice removal                            0.0001427 0.000000 0.0001427\nSpeeding                                    0.1144781 0.112795 0.0791246\nStreet Cleaning/Sweeping                    0.1215868 0.098403 0.0963421\nStreet Light - Repair                       0.1057357 0.105237 0.1134663\nStreet Obstruction/Closure                  0.1201629 0.120163 0.0916497\nThank you - DPW                             0.1252747 0.112088 0.0879121\nTraffic                                     0.1046759 0.162062 0.1232731\nTraffic or Pedestrian Signal, Repair        0.1165571 0.105798 0.0854752\nTraffic or Pedestrian Signal, Request       0.0742188 0.111328 0.1035156\nTree Fallen Across Road                     0.1831346 0.064736 0.0442930\nTree Fallen Across Sidewalk                 0.2121662 0.063798 0.0474777\nTree Issues                                 0.1454545 0.094949 0.0848485\nTree Removal                                0.1460272 0.085183 0.0787402\nUnpermitted Electrical Work                 0.0571429 0.065934 0.1318681\nUnpermitted HVAC Work                       0.0824176 0.075549 0.0879121\nUtility Cut - Other                         0.1160610 0.110199 0.0937866\nUtility Cut - PWSA                          0.0716080 0.062814 0.0690955\nUtility Pole                                0.1197183 0.077465 0.0563380\nVacant Building                             0.0749482 0.077847 0.0815735\nWeeds/Debris                                0.1616070 0.097922 0.0718657\nWires                                       0.1316568 0.091716 0.0532544\nZoning Issue                                0.0908333 0.079167 0.0875000\n                                                 Nov      Dec\nAbandoned Vehicle (parked on street)        0.086098 0.076400\nBarking Dog                                 0.074324 0.051802\nBoard Up (PLI referral to DPW)              0.076754 0.065789\nBroken Sidewalk                             0.064269 0.030604\nBuilding Maintenance                        0.093419 0.078900\nBuilding Without a Permit                   0.086285 0.075613\nCatch Basin, Clogged                        0.064820 0.043606\nCity Source (CDBG)                          0.025632 0.005969\nCity Steps, Need Cleared                    0.022951 0.024590\nCity Steps, Need Repaired                   0.075356 0.038697\nCollapsed Catch Basin                       0.068807 0.053899\nCommercial Refuse/Dumpsters                 0.069246 0.065173\nCurb /Broken/Deteriorated                   0.046610 0.038136\nCurb/Request for Asphalt Windrow            0.047680 0.020619\nDead Animal                                 0.083661 0.048849\nDead tree (Public property)                 0.051774 0.030681\nDrainage/Leak                               0.070652 0.077174\nDrug Enforcement                            0.067274 0.045550\nDumping, Private Property                   0.074689 0.058091\nDumpster (on Street)                        0.083465 0.064567\nEarly Set Out                               0.069059 0.071090\nExcessive Noise/Disturbances                0.092213 0.140027\nField                                       0.032864 0.030516\nFire Safety System Not Working              0.051432 0.083333\nGraffiti, Documentation                     0.072097 0.041199\nGraffiti, Removal                           0.066129 0.079032\nHydrant                                     0.090406 0.092251\nIllegal Dumping                             0.083582 0.066667\nIllegal Parking                             0.088077 0.074828\nJunk Vehicles                               0.091232 0.050948\nLeak                                        0.097418 0.124696\nLeaves/Street Cleaning                      0.430730 0.159950\nLitter                                      0.070272 0.056694\nLitter Can, Public                          0.068826 0.047773\nMaintenance Issue                           0.053968 0.039153\nMayor's Office                              0.083888 0.077230\nMissed Blue Bag                             0.091316 0.086840\nMissed Pick Up                              0.070164 0.072084\nNeed Potable Water                          0.000000 0.001199\nOperating Without a License                 0.026030 0.023861\nOvergrowth                                  0.013768 0.003653\nParking Authority                           0.068817 0.081720\nPatrol                                      0.070838 0.052538\nPaving Concern/Problem                      0.108753 0.042440\nPaving Request                              0.034493 0.020877\nPermit Parking (Residential Parking Permit) 0.077449 0.059226\nPlayground                                  0.041353 0.003759\nPotholes                                    0.053289 0.025434\nPruning (city tree)                         0.041272 0.020636\nPublic Right of Way                         0.044847 0.022901\nQuestion                                    0.084852 0.061596\nReferral                                    0.081998 0.073989\nRefuse Violations                           0.067536 0.071220\nReplace/Repair a Sign                       0.070191 0.064342\nRequest New Sign                            0.076339 0.052720\nRetaining Wall Maintenance                  0.070513 0.038462\nRodent control                              0.071330 0.048780\nRoot prune                                  0.043155 0.038690\nSidewalk Obstruction                        0.086514 0.071247\nSidewalk, Lack of Snow/Ice Removal          0.000000 0.122249\nSinkhole                                    0.058339 0.039315\nSmoke detectors                             0.088816 0.077303\nSnow/Ice removal                            0.003711 0.169997\nSpeeding                                    0.052189 0.045455\nStreet Cleaning/Sweeping                    0.082947 0.030912\nStreet Light - Repair                       0.115960 0.098254\nStreet Obstruction/Closure                  0.089613 0.075356\nThank you - DPW                             0.065934 0.048352\nTraffic                                     0.088735 0.063762\nTraffic or Pedestrian Signal, Repair        0.084877 0.054991\nTraffic or Pedestrian Signal, Request       0.068359 0.056641\nTree Fallen Across Road                     0.036627 0.017036\nTree Fallen Across Sidewalk                 0.040059 0.020772\nTree Issues                                 0.070707 0.052525\nTree Removal                                0.047960 0.027201\nUnpermitted Electrical Work                 0.101099 0.121978\nUnpermitted HVAC Work                       0.074176 0.071429\nUtility Cut - Other                         0.069168 0.079719\nUtility Cut - PWSA                          0.081658 0.036432\nUtility Pole                                0.075117 0.061033\nVacant Building                             0.132091 0.123810\nWeeds/Debris                                0.045386 0.026722\nWires                                       0.076923 0.048817\nZoning Issue                                0.092500 0.080833\n```\n\n\n:::\n:::\n\n\n\nCreate the PCA object\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_months_pca1 %>% \n  prcomp(scale = TRUE) -> pc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard deviations (1, .., p=12):\n [1] 2.0313544303132338165 1.5112299607905637089 1.3677583442481686671\n [4] 1.0647449915481708160 0.9373153843502739502 0.6612690017981475155\n [7] 0.6319678449167122070 0.5732234023111666410 0.4666060722915733039\n[10] 0.4192405535100036107 0.3847717270238655840 0.0000000000000002152\n\nRotation (n x k) = (12 x 12):\n        PC1     PC2       PC3      PC4      PC5        PC6      PC7      PC8\nJan -0.3509  0.2377  0.036588 -0.40554 -0.40259 -0.0878343  0.04648  0.10077\nFeb -0.2189  0.2230 -0.226391  0.69886  0.14610  0.1005237  0.15306 -0.04311\nMar -0.0235 -0.4858 -0.323760  0.11519 -0.19761 -0.1724337 -0.62037  0.31077\nApr  0.1329 -0.4686 -0.301500 -0.04306 -0.07313 -0.5014973  0.54199 -0.09929\nMay  0.2339 -0.1448 -0.445597 -0.33914  0.15507  0.5723879 -0.10942 -0.40042\nJun  0.4049  0.1866  0.002112 -0.22765  0.21210 -0.0386388  0.13438  0.42038\nJul  0.4322  0.1697  0.095923 -0.10888  0.01800 -0.1443989  0.02032  0.13081\nAug  0.3866  0.1805  0.189907  0.17598  0.04242 -0.2554247 -0.44835 -0.13536\nSep  0.2944 -0.1580  0.365255  0.16856 -0.42595 -0.0005222  0.04916 -0.53195\nOct  0.1150 -0.4130  0.389922  0.16708 -0.17452  0.5136274  0.18989  0.43757\nNov -0.1323 -0.3291  0.333424 -0.05855  0.69855 -0.1384698 -0.02866 -0.09659\nDec -0.3720 -0.1311  0.333522 -0.25017  0.03408 -0.0524049 -0.15824 -0.15902\n          PC9     PC10      PC11   PC12\nJan -0.119474 -0.19207  0.310620 0.5699\nFeb  0.085692  0.10149 -0.130098 0.5209\nMar  0.259371  0.01955  0.035606 0.1620\nApr -0.264116  0.01396 -0.143422 0.1379\nMay -0.106727  0.02849 -0.028027 0.2717\nJun  0.373786 -0.36939 -0.413396 0.2471\nJul  0.103405  0.77442  0.256091 0.2205\nAug -0.607417 -0.20278 -0.123033 0.1983\nSep  0.454920 -0.16862  0.035475 0.1519\nOct -0.304459  0.02271 -0.003209 0.1456\nNov  0.104258 -0.14115  0.387838 0.2472\nDec  0.008971  0.35391 -0.678722 0.1743\n```\n\n\n:::\n:::\n\n\n\nInspect the PCA object with tidier functions from the broom library. These functions turn the PCA object into a tidy dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\npc %>% \n  tidy() %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  row                                     PC   value\n  <chr>                                <dbl>   <dbl>\n1 Abandoned Vehicle (parked on street)     1 -0.844 \n2 Abandoned Vehicle (parked on street)     2 -0.844 \n3 Abandoned Vehicle (parked on street)     3  0.383 \n4 Abandoned Vehicle (parked on street)     4  0.311 \n5 Abandoned Vehicle (parked on street)     5 -0.206 \n6 Abandoned Vehicle (parked on street)     6  0.0620\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npc %>% \n  tidy(\"pcs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n      PC  std.dev percent cumulative\n   <dbl>    <dbl>   <dbl>      <dbl>\n 1     1 2.03e+ 0  0.344       0.344\n 2     2 1.51e+ 0  0.190       0.534\n 3     3 1.37e+ 0  0.156       0.690\n 4     4 1.06e+ 0  0.0945      0.785\n 5     5 9.37e- 1  0.0732      0.858\n 6     6 6.61e- 1  0.0364      0.894\n 7     7 6.32e- 1  0.0333      0.927\n 8     8 5.73e- 1  0.0274      0.955\n 9     9 4.67e- 1  0.0181      0.973\n10    10 4.19e- 1  0.0146      0.988\n11    11 3.85e- 1  0.0123      1    \n12    12 2.15e-16  0           1    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npc %>% \n  augment(data = df_months) -> au\n\nau %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 26\n  .rownames request_type    Jan    Feb    Mar    Apr    May    Jun    Jul    Aug\n  <chr>     <chr>         <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 1         Abandoned V… 0.0890 0.0727 0.0769 0.0710 0.0830 0.0793 0.0778 0.101 \n2 2         Barking Dog  0.0563 0.0608 0.0608 0.0631 0.104  0.101  0.0788 0.113 \n3 3         Board Up (P… 0.0395 0.0482 0.0658 0.0943 0.114  0.0899 0.110  0.123 \n4 4         Broken Side… 0.0337 0.155  0.148  0.0872 0.105  0.0964 0.0696 0.0735\n5 5         Building Ma… 0.0708 0.0919 0.103  0.0739 0.0842 0.0829 0.0725 0.0919\n6 6         Building Wi… 0.0842 0.0697 0.0636 0.0577 0.105  0.0883 0.0924 0.0815\n# ℹ 16 more variables: Sep <dbl>, Oct <dbl>, Nov <dbl>, Dec <dbl>,\n#   .fittedPC1 <dbl>, .fittedPC2 <dbl>, .fittedPC3 <dbl>, .fittedPC4 <dbl>,\n#   .fittedPC5 <dbl>, .fittedPC6 <dbl>, .fittedPC7 <dbl>, .fittedPC8 <dbl>,\n#   .fittedPC9 <dbl>, .fittedPC10 <dbl>, .fittedPC11 <dbl>, .fittedPC12 <dbl>\n```\n\n\n:::\n:::\n\n\n\nPlot how the PCA object explains the variance in the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npc %>% \n  tidy(\"pcs\") %>%\n  select(-std.dev) %>% \n  gather(measure, value, -PC) %>% \n    ggplot(aes(PC, value)) +\n    geom_line() +\n    geom_point() +\n    facet_wrap(~measure) +\n    labs(title = \"Variance explained by each principal component\",\n         x = \"Principal Component\",\n         y = NULL) +\n    scale_x_continuous(breaks = 1:12)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nThe first two principal components explain most of the variance\n\nFor an in-depth plot we need to create the PCA object a different way\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_months %>% \n  nest() %>% \n  mutate(pca = map(data, ~ prcomp(.x %>% select(-request_type), \n                                  center = TRUE, scale = TRUE)),\n         pca_aug = map2(pca, data, ~augment(.x, data = .y))) -> df_months_pca2\n```\n:::\n\n\n\nPlot the PCA data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_months_pca2 %>%\n  mutate(\n    pca_graph = map2(\n      .x = pca,\n      .y = data,\n      ~ autoplot(.x, loadings = TRUE, loadings.label = TRUE,\n                 loadings.label.repel = TRUE,\n                 data = .y) +\n        theme_bw() +\n        labs(x = \"Principal Component 1\",\n             y = \"Principal Component 2\",\n             title = \"First two principal components of PCA on 311 dataset\")\n    )\n  ) %>%\n  pull(pca_graph)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\nThis shows that summer and winter explain a significant part of the variance\n\nPlot the data to show the outliers\n\n\n::: {.cell}\n\n```{.r .cell-code}\nau %>% \n  mutate(outlier = case_when(abs(.fittedPC1) > 2 & abs(.fittedPC2) > 1.5 ~ TRUE),\n         pothole = case_when(request_type == \"Potholes\" ~ \"Potholes\",\n                             request_type != \"Potholes\" ~ \"Other\")) -> au\n\nau %>% \nggplot(aes(.fittedPC1, .fittedPC2)) +\n  geom_point() +\n  geom_label_repel(data = au %>% filter(outlier),\n             aes(label = request_type)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nau %>% \nggplot(aes(.fittedPC1, .fittedPC2)) +\n  geom_point(aes(color = pothole)) +\n  geom_label_repel(data = au %>% filter(request_type == \"Potholes\"),\n             aes(label = request_type)) +\n  theme_bw() +\n  scale_color_manual(NULL, values = c(\"black\", \"red\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n# Sources\n* https://tbradley1013.github.io/2018/02/01/pca-in-a-tidy-verse-framework/\n* https://rdrr.io/cran/broom/man/prcomp_tidiers.html\n* https://poissonisfish.wordpress.com/2017/01/23/principal-component-analysis-in-r/\n* http://rstatistics.net/principal-component-analysis/\n* https://community.rstudio.com/t/tidyverse-solutions-for-factor-analysis-principal-component-analysis/4504",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}