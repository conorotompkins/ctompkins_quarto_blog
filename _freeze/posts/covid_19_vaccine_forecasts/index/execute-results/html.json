{
  "hash": "ca27e4a11a278014ee695c5a5869cc9a",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"COVID-19 vaccine forecast and pastcasts\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: []\ncategories: []\ndate: 2021-04-22\nlastmod: 2021-04-22\nfeatured: false\ndraft: false\nimage: featured.png\nexecute: \n  echo: true\n  warning: false\n  message: false\n  eval: false\n---\n\n\n\nLike many other Americans, I have been following the COVID-19 vaccination campaign closely. I have found the graphs and data on the [NYTimes](https://www.nytimes.com/interactive/2020/us/covid-19-vaccine-doses.html) and [Bloomberg](https://www.bloomberg.com/graphics/covid-vaccine-tracker-global-distribution/) sites very useful for tracking trends.\n\nThis graph on the NYTimes site is particularly good, I think.\n\n\n\n::: {.cell}\n\n:::\n\n\n\nYou can follow the trend of past vaccinations, and the forecast is useful.\n\nI wanted to know how it would look if multiple \"historical\" forecasts started along the trend line, in addition to the \"current pace\" line. This is possible with some nested tibbles and `ggplot2`. I walk through some of the data quality issues with the dataset at the end.\n\nSet up the environment:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(sf)\nlibrary(broom)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(hrbrthemes)\nlibrary(ggrepel)\nlibrary(tune)\nlibrary(slider)\nlibrary(broom)\n\ntheme_set(theme_ipsum())\n\noptions(scipen = 999, digits = 4)\n```\n:::\n\n\n\nThis sets up the total date range I will consider for the analysis:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set date range to examine.\ndate_seq <- seq.Date(from = ymd(\"2020-12-01\"), to = ymd(\"2022-08-01\"), by = \"day\")\n```\n:::\n\n\n\nI use the COVID-19 vaccine distribution data from [Johns Hopkins University](https://github.com/govex/COVID-19).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#download data from JHU\nvacc_data_raw <- read_csv(\"https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv\") %>% \n  clean_names() %>% \n  #filter to only keep vaccine type All, which will show the cumulative sum of doses for all vaccine types\n  filter(vaccine_type == \"All\") %>% \n  #select state, date, vaccine type, and stage one doses\n  select(province_state, date, stage_one_doses) %>% \n  #for each state, pad the time series to include all the dates in date_seq\n  complete(date = date_seq, province_state) %>% \n  #sort by state and date\n  arrange(province_state, date)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_raw\n```\n:::\n\n\n\n![](table_1.png)\n\nThis replaces `NA` values of `stage_one_doses` with 0 if it occurred before the current date.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data <- vacc_data_raw %>% \n  mutate(stage_one_doses = case_when(date < ymd(\"2021-04-22\") & is.na(stage_one_doses) ~ 0,\n                                     !is.na(stage_one_doses) ~ stage_one_doses,\n                                     TRUE ~ NA_real_)) %>% \n  arrange(province_state, date)\n```\n:::\n\n\n\nThis shows the cumulative sum of first doses by `province_state`. This reveals some data quality issues that I discuss later in the post.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data %>% \n  filter(date <= ymd(\"2021-04-22\")) %>% \n  ggplot(aes(date, stage_one_doses, group = province_state)) +\n  geom_line(alpha = .5, size = .3) +\n  scale_y_comma()\n```\n:::\n\n\n\n![](graph_1.png)\n\nThis calculates the total sum of first doses by date.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data <- vacc_data %>% \n  group_by(date) %>% \n  summarize(stage_one_doses = sum(stage_one_doses, na.rm = F)) %>%\n  ungroup()\n```\n:::\n\n\n\nThe inconsistent data reporting issues bubble up to the national level. I will take a 7-day trailing average to smooth that out.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data %>% \n  filter(date <= ymd(\"2021-04-22\")) %>% \n  ggplot(aes(date, stage_one_doses)) +\n  geom_line()\n```\n:::\n\n\n\n![](graph_2.png)\n\nThis calculates the number of new doses given out by day. If the difference between day 1 and day 0 is negative, I replace it with 0.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data <- vacc_data %>% \n  mutate(stage_one_doses_new = stage_one_doses - lag(stage_one_doses, n = 1),\n         stage_one_doses_new = case_when(stage_one_doses_new < 0 ~ 0,\n                                         TRUE ~ stage_one_doses_new))\n```\n:::\n\n\n\nThis calculates the 7-day trailing average of new first doses distributed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_rolling <- vacc_data %>% \n  mutate(stage_one_doses_new_rolling = slide_index_dbl(.i = date,\n                                                       .x = stage_one_doses_new,\n                                                       .f = mean,\n                                                       .before = 6,\n                                                       .complete = FALSE))\n```\n:::\n\n\n\nThen I recalculate the cumulative sum of first doses using the trailing average instead of the raw data. This smooths out the data collection issues.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_forecast <- vacc_data_rolling %>% \n  fill(stage_one_doses_new_rolling, .direction = \"down\") %>%\n  mutate(future_flag = date >= ymd(\"2021-04-22\")) %>%\n  mutate(stage_one_doses_new_rolling_forecast = cumsum(coalesce(stage_one_doses_new_rolling, 0)))\n\nvacc_forecast %>% \n  filter(future_flag == F) %>% \n  ggplot(aes(date, stage_one_doses_new_rolling_forecast)) +\n  geom_line() +\n  scale_y_comma()\n```\n:::\n\n\n\n![](garph_3.png)\n\nThis calculates the percent of the population with a first dose vaccination.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_forecast <- vacc_forecast %>% \n  mutate(total_pop = 332410303) %>% \n  mutate(vacc_pct = stage_one_doses_new_rolling_forecast / total_pop)\n\n#at the current rate we should hit 90% around July 20th\nvacc_forecast %>% \n  filter(vacc_pct > .9) %>% \n  slice(1)\n```\n:::\n\n\n\n![](table_6.png)\n\nThis is a basic replication of the NYTimes graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_forecast %>% \n  filter(date <= ymd(\"2021-04-22\") + 120) %>% \n  ggplot(aes(x = date)) +\n  geom_line(aes(y = vacc_pct, color = future_flag)) +\n  geom_hline(yintercept = .9, lty = 2) +\n  scale_y_percent(limits = c(0, 1), breaks = c(0, .25, .5, .75, .9, 1)) +\n  labs(y = \"Pct with 1 vaccination\")\n```\n:::\n\n\n\n![](graph_4.png)\n\nNow to add the \"historical\" projections. I create a list of dates to filter the data with.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonth_filters <- c(seq(from = ymd(\"2021-02-01\"), to = ymd(\"2021-04-01\"), by = \"month\"), ymd(\"2021-04-22\"))\n\nmonth_filters\n```\n:::\n\n\n\nI use `map` to create 4 dataframes, each only containing data up until the given filter date.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_data <- \n  month_filters %>% \n  set_names() %>% \n  map(~filter(vacc_data_rolling, date <= .x)) %>% \n  enframe(name = \"last_date\", value = \"historical_data\") %>% \n  mutate(last_date = ymd(last_date),\n         current_week = last_date == max(last_date))\n\nvaccine_forecast_data\n```\n:::\n\n\n\n![](table_7.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_data %>% \n  unnest(historical_data) %>% \n  filter(date <= ymd(\"2021-04-22\") + 120) %>% \n  ggplot(aes(x = date)) +\n  geom_line(aes(y = stage_one_doses)) +\n  facet_wrap(~last_date) +\n  scale_y_comma()\n```\n:::\n\n\n\n![](graph_5.png)\n\nThis unnests the tibbles and fills out the future data for each `last_date`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_data <- \n  vaccine_forecast_data %>% \n  unnest(historical_data) %>% \n  group_by(last_date) %>% \n  #for each filter date table, create rows for the rest of the date range\n  complete(date = date_seq) %>% \n  fill(stage_one_doses_new_rolling, current_week, .direction = \"down\") %>% \n  #create a flag for whether a row is observed or predicted\n  mutate(prediction_flag = date >= last_date,\n  #create a flag for whether a row is after the current date\n         future_flag = date > ymd(\"2021-04-22\")) %>%\n  #for each filter date, roll the 7 day moving average of vaccination rate forward\n  mutate(stage_one_doses_new_rolling_forecast = cumsum(coalesce(stage_one_doses_new_rolling, 0))) %>% \n  #source of population data: https://www.census.gov/popclock/\n  mutate(total_pop = 330175936) %>% \n  #calculate vaccination %\n  mutate(vacc_pct = stage_one_doses_new_rolling_forecast / total_pop,\n         vacc_pct = round(vacc_pct, 3)) %>% \n  filter(vacc_pct <= 1.1) %>% \n  ungroup()\n\nvaccine_forecast_data\n```\n:::\n\n\n\n![](table_2.png)\n\nThis calculates when the vaccination rate hits 100% for each historical projection.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_data <- \n  vaccine_forecast_data %>% \n  mutate(total_vacc_flag = vacc_pct >= 1) %>% \n  group_by(last_date) %>% \n  mutate(total_vacc_date = case_when(cumsum(total_vacc_flag) >= 1 ~ date,\n                                     TRUE ~ NA_Date_)) %>% \n  filter(cumsum(!is.na(total_vacc_date)) <= 1) %>% \n  ungroup()\n\nvaccine_forecast_data <- vaccine_forecast_data %>% \n  mutate(current_week_fct = case_when(current_week == F ~ \"Historical projection\",\n                                      current_week == T ~ \"Current rate\"))\n```\n:::\n\n\n\nThen I create some secondary tables to annotate the final chart.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#secondary tables for labeling\ncurrent_vacc_percent <- vaccine_forecast_data %>% \n  filter(current_week == T, date == ymd(\"2021-04-22\")) %>% \n  select(last_date, date, current_week, vacc_pct)\n\ncurrent_vacc_percent_label <- current_vacc_percent %>% \n  mutate(text_label = str_c(\"Current\", scales::percent(vacc_pct), sep = \": \"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_graph <- vaccine_forecast_data %>% \n  ggplot(aes(x = date, y = vacc_pct, group = last_date)) +\n  #90% line\n  geom_hline(yintercept = .9, lty = 2) +\n  annotate(x = ymd(\"2021-01-25\"), y = .915,\n           label = \"Herd Immunity Threshhold\", geom = \"text\", size = 6) +\n  #past cumulative line\n  geom_line(data = filter(vaccine_forecast_data, current_week == T, date <= ymd(\"2021-04-22\")),\n            color = \"black\", lty = 1, size = .7) +\n  #future cumulative lines\n  geom_line(data = filter(vaccine_forecast_data, prediction_flag == T),\n            aes(color = as.factor(last_date)),\n            size = 1.3)  +\n  # horizontal line showing current vaccination rate\n  geom_hline(data = current_vacc_percent,\n             aes(yintercept = vacc_pct),\n             size = .1) +\n  #add labels for date of 100% vaccination for the first and last filter dates\n  geom_label(data = filter(vaccine_forecast_data,\n                           last_date == min(last_date) | last_date == max(last_date)),\n             aes(label = total_vacc_date,\n                 color = as.factor(last_date)),\n             show.legend = FALSE,\n             fill = \"grey\",\n             position = position_nudge(y = .05),\n             size = 6) +\n  # label for horizontal line showing current vaccination rate\n  geom_text(data = current_vacc_percent_label,\n            aes(label = text_label),\n            position = position_nudge(x = -122, y = .02),\n            size = 6) +\n  scale_x_date(limits = c(ymd(\"2020-12-01\"), ymd(\"2022-08-01\"))) +\n  scale_y_percent(limits = c(0, 1.1), breaks = c(0, .25, .5, .75, .9, 1)) +\n  scale_alpha_manual(values = c(1, .5)) +\n  scale_color_viridis_d(labels = c(\"February 1\", \"March 1\", \"April 1\", \n                                   str_c(month(ymd(\"2021-04-22\"), label = T, abbr = F), mday(ymd(\"2021-04-22\")), sep = \" \"))) +\n  guides(color = guide_legend(override.aes = list(fill = NA))) +\n  labs(title = \"Historic and Current U.S. Vaccination Forecasts\",\n       x = NULL,\n       y = \"Single Dose Vaccination %\",\n       color = \"Projection start date\") +\n  theme_ipsum(plot_title_size = 25,\n              subtitle_size = 23,\n              axis_text_size = 23,\n              axis_title_size = 25) +\n  theme(panel.grid.minor = element_blank(),\n        legend.title = element_text(size = 20),\n        legend.text = element_text(size = 18))\n\nvaccine_forecast_graph\n```\n:::\n\n\n\n![](graph_6.png)\\\nBased on the difference in 7-day first-dose vaccinations, the U.S. shortened the timeline for 100% first-dose vaccination by 323 days.\n\nThis is a naive calculation, since the vaccination projections are based on static 7-day vaccination distribution averages. I would expect the 7-day distribution average to vary based on historical data. In addition, as the national first-dose vaccination percentage approaches 100%, the 7-day average of distribution will likely decrease because of two factors: portions of the remaining unvaccinated population probably have lower access to vaccines (i.e. homebound adults), or are hesitant to be vaccinated.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_forecast_data %>% \n  select(last_date, date, vacc_pct) %>% \n  filter(last_date == min(last_date) | last_date == max(last_date)) %>% \n  filter(vacc_pct >= 1) %>% \n  group_by(last_date) %>% \n  slice(1) %>% \n  ungroup() %>% \n  select(last_date, date) %>% \n  pivot_wider(names_from = last_date, values_from = date) %>% \n  mutate(difference = `2021-02-01` - `2021-04-22`)\n```\n:::\n\n\n\n![](table_3.png)\n\n### Data quality issues\n\n#### Cumulative decreases\n\nDue to data collection issues, there are cases where the cumulative sum of vaccinations for a given state actually decreases. I think a lot of this is because of interruptions due to the nation-wide winter storm in February 2021. Other instances could be attributed to changes in methodology for tracking vaccine distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_raw %>% \n  group_by(province_state) %>% \n  mutate(less_than_prev = stage_one_doses < lag(stage_one_doses, 1)) %>% \n  ungroup() %>% \n  filter(less_than_prev == T) %>% \n  count(date, less_than_prev) %>% \n  ggplot(aes(date, n)) +\n  geom_point() +\n  labs(x = NULL,\n       y = \"Bad data observations\")\n```\n:::\n\n\n\n![](graph_7.png)\n\nThis shows that most of the inconsistent data comes from federal agencies, US territories, and Freely Associated States\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_raw %>% \n  group_by(province_state) %>% \n  mutate(less_than_prev = stage_one_doses < lag(stage_one_doses, 1)) %>% \n  ungroup() %>% \n  filter(less_than_prev == T) %>% \n  count(province_state, less_than_prev, sort = T) \n```\n:::\n\n\n\n![](table_4.png)\n\nThis is an example from Alabama:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_raw %>% \n  mutate(less_than_prev = stage_one_doses < lag(stage_one_doses, 1)) %>% \n  filter(date >= \"2021-02-10\", date < \"2021-02-13\",\n         province_state == \"Alabama\") %>% \n  arrange(province_state, date)\n```\n:::\n\n\n\n![](table_5.png)\n\n#### Pennsylvania\n\nFrom April 17-18th there was a big jump in stage one vaccine distribution in Pennsylvania. It is unclear what caused this jump. My guess is a data collection issue.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvacc_data_raw %>% \n  filter(province_state == \"Pennsylvania\") %>% \n  drop_na(stage_one_doses) %>% \n  ggplot(aes(date, stage_one_doses)) +\n  geom_line() +\n  scale_y_comma()\n```\n:::\n\n\n\n![](graph_8.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}