{
  "hash": "bbbb58e06388b9e4a2ae5555101d3415",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Networking USL Club Similarity With Euclidean Distance\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [R, Soccer, '538']\ncategories: [R, Soccer, '538']\ndate: 2018-09-14\nlastmod: 2020-09-04\nfeatured: false\ndraft: false\nexecute: \n  eval: false\n---\n\n\n\nEuclidean distance is a simple way to measure the distance between two points. It can also be used to measure how similar two sports teams are, given a set of variables. In this post, I use Euclidean distance to calculate the similarity between USL clubs and map that data to a network graph. I will use the [538 Soccer Power Index data](https://projects.fivethirtyeight.com/global-club-soccer-rankings/) to calculate the distance.\n\n## Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(ggraph)\nlibrary(tidygraph)\nlibrary(viridis)\n\nset_graph_style()\n\nset.seed(1234)\n```\n:::\n\n\n\n## Download data\n\nThis code downloads the data from 538's GitHub repo and does some light munging.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv\", progress = FALSE) %>% \n  filter(league == \"United Soccer League\") %>% \n  mutate(name = str_replace(name, \"Arizona United\", \"Phoenix Rising\")) -> df\n\ndf\n```\n:::\n\n\n\n## Calculate Euclidean distance\n\nThis is the code that measures the distance between the clubs. It uses the 538 offensive and defensive ratings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  select(name, off, def) %>% \n  column_to_rownames(var = \"name\") -> df_dist\n\n#df_dist\n#rownames(df_dist) %>% \n#  head()\n\ndf_dist <- dist(df_dist, \"euclidean\", upper = FALSE, diag = FALSE)\n#head(df_dist)\n\ndf_dist %>% \n  tidy() %>% \n  arrange(desc(distance)) -> df_dist\n\n#df_dist %>% \n#  count(item1, sort = TRUE) %>% \n#  ggplot(aes(item1, n)) +\n#  geom_point() +\n#  coord_flip() +\n#  theme_bw()\n```\n:::\n\n\n\n## Network graph\n\nIn this snippet I set a threshhold for how similar clubs need to be to warrant a connection. Then I graph it using tidygraph and ggraph. Teams that are closer together on the graph are more similar. Darker and thicker lines indicate higher similarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistance_filter <- .5\n\ndf_dist %>% \n  mutate(distance = distance^2) %>% \n  filter(distance <= distance_filter) %>%\n  as_tbl_graph(directed = FALSE) %>% \n  mutate(community = as.factor(group_edge_betweenness())) %>%\n  ggraph(layout = \"kk\", maxiter = 1000) +\n    geom_edge_fan(aes(edge_alpha = distance, edge_width = distance)) + \n    geom_node_label(aes(label = name, color = community), size = 5) +\n    scale_color_discrete(\"Group\") +\n    scale_edge_alpha_continuous(\"Euclidean distance ^2\", range = c(.2, 0)) +\n    scale_edge_width_continuous(\"Euclidean distance ^2\", range = c(2, 0)) +\n    labs(title = \"United Soccer League clubs\",\n       subtitle = \"Euclidean distance (offensive rating, defensive rating)^2\",\n       x = NULL,\n       y = NULL,\n       caption = \"538 data, @conor_tompkins\")\n```\n:::\n\n\n\n![](usl_network_graph.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}