{
  "hash": "00df763987c46c5ebcff60018d01d65d",
  "result": {
    "markdown": "---\ntitle: 'Comparing Healthy Ride Usage Pre And \"Post\" COVID-19'\nauthor: \"Conor Tompkins\"\ndate: 2020-08-14\nlastmod: 2020-08-14T12:58:17-04:00\neditor_options: \n  chunk_output_type: console\nimage: preview.png\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\nLawrence Andrews asked me on Twitter if there had been a change in Health Ride usage after COVID-19.\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Would be interested to see this <a href=\"https://twitter.com/healthyridepgh?ref_src=twsrc%5Etfw\">@healthyridepgh</a> data to compare pre-covid (2019) and during (2020)</p>&mdash; Lawrence Andrews (@lawrenceandrews) <a href=\"https://twitter.com/lawrenceandrews/status/1293879786528546816?ref_src=twsrc%5Etfw\">August 13, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n  \nThe `{tidyverts}` universe of packages from Rob Hyndman provides a lot of tools that let you interrogate time series data. I will use some of these tools to decompose the Healthy Ride time series and see if there was a change.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(tsibble)\nlibrary(feasts)\nlibrary(hrbrthemes)\n\noptions(scipen = 999, digits = 4)\n\ntheme_set(theme_ipsum(base_size = 20, \n                      strip_text_size = 18, \n                      axis_title_size = 18))\n```\n:::\n\n\nI had already combined the usage data from the [WPRDC](https://data.wprdc.org/dataset/healthyride-trip-data) with `list.files` and `map_df(read_csv)`, so I can just read in the combined CSV file:\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"post_data/combined_ride_data.csv\")\n```\n:::\n\n\nSummarizing the number of rides per day shows that the data is very seasonal. The red line is on March 6, which is the date of the first *known* positive COVID-19 case in the state.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% \n  count(date, name = \"number_of_rides\", sort = TRUE) %>% \n  filter(!is.na(date)) %>% \n  ggplot(aes(date, number_of_rides)) +\n  geom_point(alpha = .5, size = .5) +\n  geom_vline(xintercept = ymd(\"2020-03-06\"), color = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nI use the `{tsibble}` package to make a time series tibble and fill in a few gaps in the data. Then I create 3 different models to decompose the time series. I will compare these 3 models to see which strips away the seasonality the best.\n\n::: {.cell}\n\n```{.r .cell-code}\ndcmp <- data %>%\n  mutate(time = date) %>% \n  count(time, name = \"number_of_rides\") %>%\n  as_tsibble(index = time) %>%\n  tsibble::fill_gaps(number_of_rides = 0) %>% \n  model(STL(number_of_rides),\n        STL(number_of_rides ~ season(window = Inf)),\n        STL(number_of_rides ~ trend(window=7) + season(window='periodic'),\n            robust = TRUE))\n\ncomponents(dcmp) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,850\nColumns: 8\nKey: .model [3]\n: number_of_rides = trend + season_year + season_week + remainder\n$ .model          <chr> \"STL(number_of_rides)\", \"STL(number_of_rides)\", \"STL(n…\n$ time            <date> 2015-05-31, 2015-06-01, 2015-06-02, 2015-06-03, 2015-…\n$ number_of_rides <dbl> 480, 126, 139, 131, 213, 274, 380, 424, 124, 255, 267,…\n$ trend           <dbl> 249.2, 249.1, 249.1, 249.0, 248.9, 248.9, 248.8, 248.8…\n$ season_week     <dbl> 120.53, -87.43, -67.74, -17.65, -50.30, 16.87, 87.83, …\n$ season_year     <dbl> 132.54, 101.70, 103.87, 105.32, 131.12, 84.99, 20.29, …\n$ remainder       <dbl> -22.2488, -137.3844, -146.1889, -205.6720, -116.7592, …\n$ season_adjust   <dbl> 226.93, 111.73, 102.87, 43.33, 132.18, 172.13, 271.89,…\n```\n:::\n:::\n\n\nThis code pivots the data long and plots the true number of rides per day and the estimate of the underlying trend per model. The \"season_adjust\" panel shows the number of rides adjusted for seasonal effects, the \"trend\" panel shows the underlying trend, and the \"remainder\" panel shows how much the seasonal adjustment missed by.\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(dcmp) %>% \n  pivot_longer(cols = number_of_rides:season_adjust) %>% \n  mutate(name = factor(name, levels = c(\"number_of_rides\", \"season_adjust\",\n                                        \"trend\", \"seasonal\",\n                                        \"season_year\", \"season_week\",\n                                        \"random\", \"remainder\"))) %>% \n  filter(!is.na(value)) %>% \n  filter(name == \"trend\" | name == \"season_adjust\" | name == \"number_of_rides\" | name == \"remainder\") %>% \n  ggplot(aes(time, value, color = .model)) +\n  geom_point(alpha = .6, size = .6) +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2020-03-06\"), xmax = ymd(\"2020-12-31\"),\n           ymin = -Inf, ymax = Inf, \n           fill = \"red\", alpha = .1) +\n  facet_grid(name ~ .model, scales = \"free_y\", labeller = label_wrap_gen()) +\n  guides(color = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\nI am not a time series expert, but it appears that the most basic STL model `STL(number_of_rides)` does the best job because that model's \"trend\" panel shows the least seasonality.\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(dcmp) %>% \n  pivot_longer(cols = number_of_rides:season_adjust) %>% \n  mutate(name = factor(name, levels = c(\"number_of_rides\", \"season_adjust\",\n                                        \"trend\", \"seasonal\",\n                                        \"season_year\", \"season_week\",\n                                        \"random\", \"remainder\"))) %>% \n  filter(!is.na(value)) %>% \n  filter(name == \"trend\" | name == \"season_adjust\" | name == \"number_of_rides\" | name == \"remainder\") %>% \n  filter(.model == \"STL(number_of_rides)\") %>% \n  ggplot(aes(time, value, color = .model)) +\n  geom_point(alpha = .6, size = .6, color = \"#619CFF\") +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2016-03-06\"), xmax = ymd(\"2016-03-30\"),\n           ymin = -Inf, ymax = Inf, \n           fill = \"black\", alpha = .3) +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2017-03-06\"), xmax = ymd(\"2017-03-30\"),\n           ymin = -Inf, ymax = Inf, \n           fill = \"black\", alpha = .3) +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2018-03-06\"), xmax = ymd(\"2018-03-30\"),\n           ymin = -Inf, ymax = Inf, \n           fill = \"black\", alpha = .3) +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2019-03-06\"), xmax = ymd(\"2019-03-30\"),\n           ymin = -Inf, ymax = Inf, \n           fill = \"black\", alpha = .3) +\n  annotate(geom = \"rect\", \n           xmin = ymd(\"2020-03-06\"), xmax = ymd(\"2020-03-06\") + 60,\n           ymin = -Inf, ymax = Inf, \n           fill = \"red\", alpha = .3) +\n  facet_grid(name ~ .model, scales = \"free_y\", labeller = label_wrap_gen()) +\n  guides(color = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\nFocusing on that model, it appears that the trend dropped in mid-March, but rebounded to normal levels quickly. I highlighted the data from previous Marches to see if there was a recurring dip in March.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}