{
  "hash": "80bf4c7bea0c0b404850b4b69bc2c632",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Car Crashes in Allegheny County\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [WPDRC, Allegheny County]\ncategories: [WPDRC, Allegheny County]\ndate: 2018-06-27\nlastmod: 2020-09-27T13:04:37-04:00\nfeatured: false\nimage: crash_heatmap_15min.png\ndraft: false\nexecute: \n  echo: true\n  warning: false\n  message: false\n  eval: false\n---\n\n\n\n# Introduction\n\nWPRDC has published a [dataset](https://data.wprdc.org/dataset/allegheny-county-crash-data) on car crashes in Allegheny County from 2004-2017. I was interested to see if there were any patterns or interesting trends in the data.\n\n# Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(viridis)\nlibrary(scales)\nlibrary(gganimate)\n\ntheme_set(theme_bw(base_size = 18))\n\noptions(scipen = 999, digits = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_subtitle <- \"Allegheny County crash data 2004-2017\"\nmy_caption <- \"@conor_tompkins - Data from WPRDC\"\n```\n:::\n\n\n\n## Load data\n\nThe data was difficult to work with, so I condensed my data munging and cleansing workflow into the following scripts. I may write a post about that process in the future.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"https://raw.githubusercontent.com/conorotompkins/allegheny_crashes/master/scripts/02_factorize_columns.R\")\nsource(\"https://raw.githubusercontent.com/conorotompkins/allegheny_crashes/master/scripts/03_clean_data.R\")\n\ndf <- data %>% \n  mutate(casualty_count = injury_count + fatal_count)\n\nrm(\"data\", \"df_combined_allegheny_county_crash_data_2004_2017_factorized\", \"df_dictionary\")\n```\n:::\n\n\n\nThis graph shows that the number of crashes per year is stable, with some year-to-year variation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(crash_year = factor(crash_year)) %>% \n  count(crash_year) %>% \n  ggplot(aes(crash_year, n, group = 1)) +\n  geom_line() +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 13000),\n                     label=comma) +\n  labs(title = \"Crashes per year\",\n       subtitle = my_subtitle,\n       x = NULL,\n       y = \"Number of crashes\",\n       caption = my_caption) +\n    theme(axis.text.x = element_text(angle = 75, hjust = 1))\n```\n:::\n\n\n\n![](crashes_per_year.png)\n\nThis shows that the number of crashes per month has varied similarly over the years:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(crash_year = factor(crash_year)) %>% \n  count(crash_year, crash_month) %>% \n  ggplot(aes(crash_month, n)) +\n    geom_smooth(aes(group = 1)) +\n    geom_jitter(aes(color = crash_month),\n                height = 0,\n                width = .25,\n                alpha = .5,\n                show.legend = F) +\n    scale_y_continuous(label = comma) +\n    scale_color_viridis(\"Month\",\n                        discrete = TRUE) +\n    labs(title = \"Crashes per month\",\n         subtitle = my_subtitle,\n         x = \"1 dot = Month/Year. Jitter applied\",\n         y = \"Number of crashes\",\n         caption = my_caption) +\n  theme(axis.title.x = element_text(size = 12))\n```\n:::\n\n\n\n![](crashes_per_month.png)\n\nThis shows that there is much greater variation between weekdays, though there is still a perceptible pattern.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  count(crash_year, crash_month, day_of_week) -> df_months_year_dow\n\ndf_months_year_dow %>% \n  group_by(day_of_week) %>% \n  summarize(median = median(n)) -> df_dow\n\ndf_months_year_dow %>% \n  ggplot(aes(day_of_week, n)) +\n  geom_jitter(aes(color = day_of_week), \n              height = 0,\n              alpha = .3,\n              show.legend = F) +\n  geom_point(data = df_dow,\n             aes(x = day_of_week,\n                 y = median,\n                 fill = day_of_week),\n             color = \"black\",\n             size = 4,\n             shape = 21,\n             show.legend = F) +\n  scale_color_viridis(discrete = TRUE) +\n  scale_fill_viridis(discrete = TRUE) +\n  scale_y_continuous(label = comma) +\n  labs(title = \"Crashes per weekday\",\n         subtitle = my_subtitle,\n         x = \"Large dot = median, small dot = Weekday/Month/Year. Jitter applied\",\n         y = \"Number of crashes\",\n         caption = my_caption) +\n  theme(axis.title.x = element_text(size = 12),\n        axis.text.x = element_text(size = 12))\n```\n:::\n\n\n\n![](crashes_per_weekday.png)\n\nThis shows that the number of crashes increases in the fall and winter.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(crash_month = fct_rev(crash_month)) %>% \n  count(crash_year, crash_month) %>% \n  ggplot(aes(crash_year, crash_month, fill = n)) +\n    geom_tile() +\n    coord_equal() +\n    scale_x_continuous(expand = c(0,0),\n                       breaks = c(2004:2017)) +\n    scale_y_discrete(expand = c(0,0)) +\n    scale_fill_viridis(\"Number of crashes\",\n                       labels = comma) +\n    labs(title = \"Crash heatmap\",\n         subtitle = my_subtitle,\n         x = NULL,\n         y = NULL,\n         caption = my_caption) +\n    theme(panel.grid = element_blank(),\n          axis.text.x = element_text(angle = 75, hjust = 1))\n```\n:::\n\n\n\n![](crash_heatmap.png)\n\nThese plots show how the number of crashes changes throughout the day.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(day_of_week = fct_rev(day_of_week)) %>% \n  filter(!hour_of_day > 24,\n         !is.na(day_of_week)) %>% \n  count(day_of_week, hour_of_day) %>% \n  ggplot(aes(hour_of_day, day_of_week, fill = n)) +\n  geom_tile() +\n  coord_equal() +\n  labs(title = \"Crash heatmap\",\n       subtitle = my_subtitle,\n       x = \"Hour of day\",\n       y = \"\",\n       caption = my_caption) +\n  scale_y_discrete(expand = c(0,0)) +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_fill_viridis(labels = comma,\n                     \"Number of crashes\") +\n  theme(legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size = 8, \n                                   angle = 300))\n```\n:::\n\n\n\n![](crash_heatmap_wday.png)\n\n\n\n::: {.cell}\n\n:::\n\n\n\nThis shows a more granular view:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  select(day_of_week, time_of_day) %>% \n  filter(!time_of_day > 2400,\n         !is.na(day_of_week)) %>% \n  mutate(day_of_week = fct_rev(day_of_week),\n         hour = time_of_day %/% 100,\n         minute = time_of_day %% 100) %>% \n  count(day_of_week, hour, minute) %>% \n  complete(day_of_week, hour = 0:23, minute = 0:60) %>% \n  replace_na(list(n = 0)) %>% \n  mutate(time = make_datetime(hour = hour, min = minute),\n         time = round_date(time, unit = \"15 minutes\")) %>%\n  group_by(day_of_week, time) %>% \n  summarize(n = sum(n)) -> df_time_rounded\n\ndf_time_rounded %>% \n  ggplot(aes(time, day_of_week, fill = n)) +\n  geom_tile() +\n  scale_y_discrete(expand = c(0,0)) +\n  scale_x_datetime(date_labels = (\"%H:%M\"),\n                   expand = c(0,0)) +\n  scale_fill_viridis(\"Number of crashes\") +\n  labs(title = \"Crash heatmap\",\n       subtitle = my_subtitle,\n       x = \"Time (rounded to nearest 15 minutes)\",\n       y = \"\",\n       caption = my_caption) +\n  theme(legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size = 8, angle = 300))\n```\n:::\n\n\n\n![](crash_heatmap_15min.png)\n\n\n\n::: {.cell}\n\n:::\n\n\n\nThis is a different veiew of the same data. Saturday and Sunday behave differently than the weekdays.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  select(time_of_day, day_of_week) %>% \n  filter(!time_of_day > 2400,\n         !is.na(day_of_week)) %>% \n  mutate(hour = time_of_day %/% 100,\n         minute = time_of_day %% 100,\n         time = make_datetime(hour = hour, min = minute),\n         time = round_date(time, unit = \"15 minutes\")) %>% \n  ggplot(aes(time, color = day_of_week)) +\n  geom_freqpoly(size = 2) +\n  scale_color_viridis(\"Weekday\", \n                      discrete = TRUE) +\n  scale_x_datetime(labels = date_format(\"%H:%M\")) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Number of crashes\",\n       subtitle = my_subtitle,\n       x = \"Time (rounded to nearest 15 minutes)\",\n       y = \"Number of crashes\",\n       caption = my_caption)\n```\n:::\n\n\n\n![](number_of_crashes.png)\n\nThis shows that there are more casualties (injuries and fatalities) per person involved in the crash in the early morning.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  mutate(day_of_week = fct_rev(day_of_week)) %>% \n  filter(hour_of_day < 24) %>% \n  group_by(day_of_week, hour_of_day) %>% \n  summarize(person_sum = sum(person_count, na.rm = TRUE),\n            casualties_sum = sum(casualty_count, na.rm = TRUE),\n            casualties_per_person = casualties_sum / person_sum) %>% \n  ggplot(aes(hour_of_day, day_of_week, fill = casualties_per_person)) +\n  geom_tile() +\n  coord_equal() +\n  scale_y_discrete(expand = c(0,0)) +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_fill_viridis(\"Casualties per person\") +\n  labs(title = \"Casualties per person\",\n       subtitle = my_subtitle,\n       x = \"Hour\",\n       y = \"\",\n       caption = my_caption) +\n  theme(legend.direction = \"horizontal\",\n        legend.position = \"bottom\",\n        legend.text = element_text(size = 8, \n                                   angle = 300))\n```\n:::\n\n\n\n![](casualties_per_person.png)\n\n\n\n::: {.cell}\n\n:::\n\n\n\nThe number of injuries and fatalities follow the same general pattern, but it is less pronunced in the fatality data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  select(crash_year, crash_month, injury_count, fatal_count) %>% \n  gather(measure, value, -c(crash_year, crash_month)) %>% \n  mutate(measure = factor(measure, \n                          levels = c(\"injury_count\", \"fatal_count\"),\n                          labels = c(\"Injuries\", \"Fatalities\"))) %>% \n  group_by(crash_year, crash_month, measure) %>% \n  summarize(value = sum(value, na.rm = TRUE)) %>% \n  ggplot(aes(crash_month, value, color = crash_month)) +\n    geom_jitter(alpha = .75,\n                height = 0,\n                width = .25,\n                show.legend = FALSE) +\n    facet_wrap(~measure,\n             ncol = 1,\n             scales = \"free\") +\n    labs(title = \"Injuries and fatalities\",\n       subtitle = my_subtitle,\n       x = \"Jitter applied\",\n       y = \"Sum\")\n```\n:::\n\n\n\n![](injuries_fatalities.png)\n\nThis shows the number of pedestrian fatalities by month.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  select(crash_year, crash_month, ped_death_count) %>%\n  group_by(crash_year, crash_month) %>% \n  summarize(ped_death_count = sum(ped_death_count, na.rm = TRUE)) %>% \n  ggplot(aes(crash_month, ped_death_count, color = crash_month)) +\n    geom_jitter(height = .15,\n                width = .25,\n                show.legend = FALSE) +\n    scale_color_viridis(\"Month\",\n                      discrete = TRUE) +\n    labs(title = \"Pedestrian fatalities\",\n       subtitle = my_subtitle,\n       x = \"One dot = Month/Year. Jitter applied\",\n       y = \"Sum\")\n```\n:::\n\n\n\n![](pedestrian_fatalities.png)\n\nThe rate of increase in the number of fatalities among belted vehicle occupants has been decreasing, while the rate among unbelted occupants has been increasing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  select(crash_year, crash_month, belted_death_count, unb_death_count) %>% \n  arrange(crash_year, crash_month) %>%\n  mutate(time_period = make_date(year = crash_year, month = crash_month)) %>%\n  group_by(time_period, crash_year, crash_month) %>% \n  summarize(belted_death_count = sum(belted_death_count),\n            unb_death_count = sum(unb_death_count)) %>% \n  gather(death_type, death_count, -c(time_period, crash_year, crash_month)) %>% \n  arrange(death_type, time_period) %>% \n  group_by(death_type) %>% \n  mutate(death_count_cum = cumsum(death_count)) %>% \n  ungroup() %>% \n  mutate(death_type = factor(death_type,\n                             levels = c(\"belted_death_count\", \"unb_death_count\"),\n                             labels = c(\"Belted deaths\", \"Unbelted deaths\"))) -> df_belted_unbelted\n\ndf_belted_unbelted %>% \n  ggplot(aes(time_period, death_count_cum, color = death_type, group = death_type)) +\n  geom_line(size = 2) +\n  scale_color_viridis(\"\", discrete = TRUE) +\n  scale_y_continuous(label = comma) +\n  labs(title = \"Car occupant fatalities\",\n       subtitle = my_subtitle,\n       x = \"\",\n       y = \"Cumulative sum of deaths\",\n       caption = my_caption) +\n  theme(panel.grid = element_blank())\n```\n:::\n\n\n\n![](car_occupant_fatalities.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}