{
  "hash": "32478356e267aa8275379506074aff67",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# Documentation: https://sourcethemes.com/academic/docs/managing-content/\n\ntitle: \"Comparing US Senators Casey and Toomey\"\nsubtitle: \"\"\nsummary: \"\"\nauthors: [Conor Tompkins]\ntags: [Politics, Pennsylvania]\ncategories: []\ndate: 2018-03-12\nlastmod: 2020-09-27T17:45:10-04:00\nfeatured: false\ndraft: false\nexecute: \n  echo: true\n  warning: false\n  message: false\n---\n\n\n\nAs a follow-up to my post about how [Pittsburgh Mayor Bill Peduto uses Twitter](http://ctompkins.netlify.com/2018/03/08/mayor-billpeduto-tweets/), I thought it would be useful to examine and compare how Pennsylvania's U.S. senators use Twitter. I will use some of the same methods, in addition to some comparative methods. In this analysis, I exclude retweets and quote tweets.\n\nThis code loads the libraries requires for the analysis, and sets some prefences for plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(lubridate)\nlibrary(rtweet)\nlibrary(scales)\nlibrary(knitr)\nlibrary(kableExtra)\n\nset.seed(1234)\ntheme_set(theme_bw(base_size = 18))\n\ntitle <- \"@SenBobCasey and @SenToomey tweets\"\ncaption <- \"@conor_tompkins\"\n```\n:::\n\n\n\nThis code uses the rtweet package to download the senator's tweets via the Twitter API:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_casey <- get_timelines(\"SenBobCasey\", n = 3200) %>% \n  mutate(senator = \"Casey\")\n\ndf_toomey <- get_timelines(\"SenToomey\", n = 3200) %>% \n  mutate(senator = \"Toomey\")\n```\n:::\n\n\n\nI have already pulled the data from Twitter, so this code downloads the tweet data from my [GitHub repo](https://github.com/conorotompkins/pittsburgh_twitter).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"https://raw.githubusercontent.com/conorotompkins/pittsburgh_twitter/master/scripts/tidytext_functions.R\")\n\ndf_casey <- read_csv(\"https://raw.githubusercontent.com/conorotompkins/pittsburgh_twitter/master/data/tweets_casey.tweets.csv\")\n\ndf_toomey <- read_csv(\"https://raw.githubusercontent.com/conorotompkins/pittsburgh_twitter/master/data/tweets_toomey.tweets.csv\")\n```\n:::\n\n\n\n## Bigram analysis\n\nBigrams are two-word chunks pulled from text. For example, \"Senator Casey\", \"Casey is\", \"is from\", and \"from Pennsylvania\" are all bigrams of the sentence \"Senator Casey is from Pennsylania\". This code extracts the bigrams from Senator Casey's tweets and counts how many times they occur. It also removes some artifacts of URLs and other Twitter metadata that are not relevant.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncasey_stopwords <- c(\"0085\", \"009f\", \"f0\", \"00a6\")\ncasey_replacers <- c(\"'s\")\ntweets_casey <- count_twitter_bigrams(df_casey, custom_stopwords = casey_stopwords)\n\ntweets_casey %>% \n  rename(count = n) %>% \n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word1 </th>\n   <th style=\"text-align:left;\"> word2 </th>\n   <th style=\"text-align:right;\"> count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> health </td>\n   <td style=\"text-align:left;\"> care </td>\n   <td style=\"text-align:right;\"> 226 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> credits </td>\n   <td style=\"text-align:left;\"> paying </td>\n   <td style=\"text-align:right;\"> 123 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> middle </td>\n   <td style=\"text-align:left;\"> class </td>\n   <td style=\"text-align:right;\"> 94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> age </td>\n   <td style=\"text-align:left;\"> tax </td>\n   <td style=\"text-align:right;\"> 80 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 50 </td>\n   <td style=\"text-align:left;\"> 64 </td>\n   <td style=\"text-align:right;\"> 69 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tax </td>\n   <td style=\"text-align:left;\"> 50 </td>\n   <td style=\"text-align:right;\"> 67 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThis network graph shows how the words are related:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisualize_bigrams(tweets_casey, 20,\n                  title = \"@SenBobCasey tweets\",\n                  subtitle = \"Bigram network\",\n                  caption = \"@conor_tompkins\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visualize_casey_bigrams-1.png){width=1152}\n:::\n:::\n\n\n\nTakeaway: Senator Casey focused on the tax cut and ACA repeal bills.\n\nThis code extracts the bigrams from Senator Toomey's tweets:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntoomey_stopwords <- c(\"0085\", \"009f\", \"f0\", \"00a6\")\ntweets_toomey <- count_twitter_bigrams(df_toomey, custom_stopwords = toomey_stopwords)\n                                       \ntweets_toomey %>% \n  rename(count = n) %>% \n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word1 </th>\n   <th style=\"text-align:left;\"> word2 </th>\n   <th style=\"text-align:right;\"> count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> happy </td>\n   <td style=\"text-align:left;\"> friday </td>\n   <td style=\"text-align:right;\"> 45 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> happy </td>\n   <td style=\"text-align:left;\"> birthday </td>\n   <td style=\"text-align:right;\"> 39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> weekly </td>\n   <td style=\"text-align:left;\"> update </td>\n   <td style=\"text-align:right;\"> 39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> health </td>\n   <td style=\"text-align:left;\"> care </td>\n   <td style=\"text-align:right;\"> 36 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> friday </td>\n   <td style=\"text-align:left;\"> pa </td>\n   <td style=\"text-align:right;\"> 32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> inbox </td>\n   <td style=\"text-align:left;\"> delivery </td>\n   <td style=\"text-align:right;\"> 24 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThis is the bigram network plot for Senator Toomey:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisualize_bigrams(tweets_toomey, 20,\n                  title = \"@SenToomey tweets\",\n                  subtitle = \"Bigram network\",\n                  caption = \"@conor_tompkins\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visualize_toomey_bigrams-1.png){width=1152}\n:::\n:::\n\n\n\nTakeaway: Senator Toomey's bigrams reflect that he uses Twitter to issue weekly updates and notify constituents about his newsletter.\n\n## Word correlation\n\nWe can also calculate and graph how the words in the tweets are correlated with each other. This code also stems the words, which combines similar words for the sake of capturing the broader usage. For example, \"county\" and \"counties\" could be stemmed into \"counti\".\n\nThis code calculates and plots the correlations:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncasey_words <- word_correlations(df_casey, minimum = 75, casey_stopwords)\n\nvisualize_word_correlations(casey_words, \n                            minimum_correlation = .2,\n                            title = \"@SenBobCasey tweets\",\n                            subtitle = \"Word correlation\",\n                            caption = \"@conor_tompkins\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/word_correlation_casey-1.png){width=1248}\n:::\n:::\n\n\n\nTakeaway: The two main clusters in this graph show that Senator Casey used a consistent vocabulary to discuss the tax cut bill and the effort to repeal the ACA.\n\nThis code calculates and plots the correlations for Senator Toomey's tweets:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntoomey_words <- word_correlations(df_toomey, minimum = 75, casey_stopwords)\n\nvisualize_word_correlations(toomey_words, \n                            minimum_correlation = .2,\n                            title = \"@SenToomey tweets\",\n                            subtitle = \"Word correlation\",\n                            caption = \"@conor_tompkins\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/word_correlation_toomey-1.png){width=1248}\n:::\n:::\n\n\n\nTakeaway: This plot shows that Senator Toomey used a consistent vocabulary to discuss his main policy goal, the tax cut bill.\n\n## Word frequency comparison\n\nWe can also compare how frequently the senators use various words. To set a baseline, Senator Toomey tweeted around 800 more times than Senator Casey in this sample of their tweets.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets <- bind_rows(df_casey, df_toomey)\n\nreplace_reg <- \"https://t.co/[A-Za-z\\\\d]+|http://[A-Za-z\\\\d]+|&amp;|&lt;|&gt;|RT|https|'s|'\"\nunnest_reg <- \"([^A-Za-z_\\\\d#@']|'(?![A-Za-z_\\\\d#@]))\"\n\ntweets %>% \n  select(senator, status_id, text, is_quote, is_retweet) %>% \n  filter(is_quote == FALSE, is_retweet == FALSE) %>% \n  mutate(text = str_replace_all(text, replace_reg, \"\"),\n         senator = factor(senator, levels = c(\"SenToomey\", \"SenBobCasey\"))) %>% \n  count(senator) %>% \n  rename(count = n) %>% \n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> senator </th>\n   <th style=\"text-align:right;\"> count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> SenToomey </td>\n   <td style=\"text-align:right;\"> 2916 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenBobCasey </td>\n   <td style=\"text-align:right;\"> 2180 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThis code breaks the tweets down into single words:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_tweets <- tweets %>% \n  select(senator, status_id, text, is_quote, is_retweet) %>% \n  filter(is_quote == FALSE, is_retweet == FALSE) %>% \n  mutate(text = str_replace_all(text, replace_reg, \"\"),\n         senator = factor(senator, levels = c(\"SenBobCasey\", \"SenToomey\"))) %>%\n  unnest_tokens(word, text, token = \"regex\", pattern = unnest_reg) %>%\n  filter(!word %in% stop_words$word,\n         !word %in% c(\"009f\", \"00a6\", \"f0\", \"http\", \".va\"),\n         str_detect(word, \"[a-z]\"))\n```\n:::\n\n\n\nThis code calculates how frequently each word is used by each senator, given how many tweets each senator has:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfrequency <- tidy_tweets %>% \n  group_by(senator) %>% \n  count(word, sort = TRUE) %>% \n  left_join(tidy_tweets %>% \n              group_by(senator) %>% \n              summarise(total = n())) %>%\n  mutate(freq = n/total)\n\nfrequency %>% \n  rename(count = n) %>% \n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> senator </th>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> count </th>\n   <th style=\"text-align:right;\"> total </th>\n   <th style=\"text-align:right;\"> freq </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> SenToomey </td>\n   <td style=\"text-align:left;\"> pa </td>\n   <td style=\"text-align:right;\"> 344 </td>\n   <td style=\"text-align:right;\"> 27773 </td>\n   <td style=\"text-align:right;\"> 0.0123861 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenBobCasey </td>\n   <td style=\"text-align:left;\"> tax </td>\n   <td style=\"text-align:right;\"> 336 </td>\n   <td style=\"text-align:right;\"> 20002 </td>\n   <td style=\"text-align:right;\"> 0.0167983 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenBobCasey </td>\n   <td style=\"text-align:left;\"> health </td>\n   <td style=\"text-align:right;\"> 299 </td>\n   <td style=\"text-align:right;\"> 20002 </td>\n   <td style=\"text-align:right;\"> 0.0149485 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenBobCasey </td>\n   <td style=\"text-align:left;\"> care </td>\n   <td style=\"text-align:right;\"> 282 </td>\n   <td style=\"text-align:right;\"> 20002 </td>\n   <td style=\"text-align:right;\"> 0.0140986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenBobCasey </td>\n   <td style=\"text-align:left;\"> @realdonaldtrump </td>\n   <td style=\"text-align:right;\"> 227 </td>\n   <td style=\"text-align:right;\"> 20002 </td>\n   <td style=\"text-align:right;\"> 0.0113489 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SenToomey </td>\n   <td style=\"text-align:left;\"> happy </td>\n   <td style=\"text-align:right;\"> 189 </td>\n   <td style=\"text-align:right;\"> 27773 </td>\n   <td style=\"text-align:right;\"> 0.0068052 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThis code spits the frequency into two columns, one for each senator. The data is sorted by how often Senator Casey used the word.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfrequency <- frequency %>% \n  select(senator, word, freq) %>% \n  spread(senator, freq) %>%\n  arrange(desc(SenBobCasey))\n\nfrequency %>% \n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> SenBobCasey </th>\n   <th style=\"text-align:right;\"> SenToomey </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> tax </td>\n   <td style=\"text-align:right;\"> 0.0167983 </td>\n   <td style=\"text-align:right;\"> 0.0044648 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> health </td>\n   <td style=\"text-align:right;\"> 0.0149485 </td>\n   <td style=\"text-align:right;\"> 0.0017643 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> care </td>\n   <td style=\"text-align:right;\"> 0.0140986 </td>\n   <td style=\"text-align:right;\"> 0.0018363 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> @realdonaldtrump </td>\n   <td style=\"text-align:right;\"> 0.0113489 </td>\n   <td style=\"text-align:right;\"> 0.0004321 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> families </td>\n   <td style=\"text-align:right;\"> 0.0088991 </td>\n   <td style=\"text-align:right;\"> 0.0026645 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lose </td>\n   <td style=\"text-align:right;\"> 0.0083992 </td>\n   <td style=\"text-align:right;\"> 0.0001440 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThis plot compares how often the senators use each word. I think it gives a somewhat fuzzy view of the policy issues each senator focuses on.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(frequency, aes(SenBobCasey, SenToomey)) +\n  geom_jitter(alpha = 0.1, size = 2.5, width = 0.25, height = 0.25) +\n  geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +\n  scale_x_log10(labels = percent_format()) +\n  scale_y_log10(labels = percent_format()) +\n  geom_abline(color = \"red\") +\n  labs(title = title,\n       x = \"Used more by @SenBobCasey\",\n       y = \"Used more by @SenToomey\",\n       caption = caption)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_word_frequency-1.png){width=864}\n:::\n:::\n\n\n\nTakeaway: Senator Toomey was more likely to use words like \"economy\", \"safety\", \"reform\", and \"prayers\". Senator Casey was more likely to use words like \"deficit\", \"premiums\", \"medicaid\", \"disabilities\", \"credits\", and \"corportations\".\n\n## Word ratios\n\nWe can also directly compare how often each senator used a word. This code calculates that differece. The higher the log ratio, the greater the difference in how often each senator used the word.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nword_ratios <- tidy_tweets %>%\n  filter(!str_detect(word, \"^@\")) %>%\n  count(word, senator) %>%\n  filter(sum(n) >= 10) %>%\n  ungroup() %>%\n  spread(senator, n, fill = 0) %>%\n  mutate_if(is.numeric, funs((. + 1) / sum(. + 1))) %>%\n  mutate(logratio = log(SenBobCasey / SenToomey)) %>%\n  arrange(desc(logratio))\n\nword_ratios %>% \n  arrange(desc(abs(logratio))) %>%\n  head() %>% \n  kable(\"html\") %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> SenBobCasey </th>\n   <th style=\"text-align:right;\"> SenToomey </th>\n   <th style=\"text-align:right;\"> logratio </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> #trumpcare </td>\n   <td style=\"text-align:right;\"> 0.0055571 </td>\n   <td style=\"text-align:right;\"> 0.0000283 </td>\n   <td style=\"text-align:right;\"> 5.279218 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> scheme </td>\n   <td style=\"text-align:right;\"> 0.0034820 </td>\n   <td style=\"text-align:right;\"> 0.0000283 </td>\n   <td style=\"text-align:right;\"> 4.811743 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> olds </td>\n   <td style=\"text-align:right;\"> 0.0024268 </td>\n   <td style=\"text-align:right;\"> 0.0000283 </td>\n   <td style=\"text-align:right;\"> 4.450729 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> #noagetax </td>\n   <td style=\"text-align:right;\"> 0.0023565 </td>\n   <td style=\"text-align:right;\"> 0.0000283 </td>\n   <td style=\"text-align:right;\"> 4.421315 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> #taxreform </td>\n   <td style=\"text-align:right;\"> 0.0000352 </td>\n   <td style=\"text-align:right;\"> 0.0024356 </td>\n   <td style=\"text-align:right;\"> -4.237725 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> #obamacare </td>\n   <td style=\"text-align:right;\"> 0.0000352 </td>\n   <td style=\"text-align:right;\"> 0.0022091 </td>\n   <td style=\"text-align:right;\"> -4.140086 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nSenator Toomey often references wife Kris in his tweets, usually while offering condolences or prayers.\n\nThis plot shows which words are more uniquely used by each senator.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nword_ratios %>%\n  group_by(logratio < 0) %>%\n  top_n(15, abs(logratio)) %>%\n  ungroup() %>%\n  mutate(word = reorder(word, logratio)) %>%\n  ggplot(aes(word, logratio, fill = logratio < 0)) +\n  geom_col(alpha = .8) +\n  coord_flip() +\n  labs(x = \"\",\n       y = \"Log odds ratio (Casey/Toomey)\") +\n  scale_fill_manual(name = \"\", \n                    values = c(\"blue\", \"red\"),\n                    breaks = c(FALSE, TRUE), \n                    labels = c(\"@SenBobCasey\", \"@SenToomey\")) +\n  theme(panel.grid.major.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_ratios-1.png){width=672}\n:::\n:::\n\n\n\nTakeaway: This plot shows the stark divide between how each senator views some of the major policy issues. Senator Casey directly criticized the problems he saw during the tax cut and ACA fight (\"trumpcare\", \"scheme\", \"lose\", \"giveaways\", and \"#noagetax\"). Senator Toomey referenced \"#philly\" and \"#obamacare\" much more, and framed the tax cut bill as \"#taxreform\".\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}