---
title: "Geospatially clustering Pittsburgh"
author: "Conor Tompkins"
editor_options: 
  chunk_output_type: console
---

```{r}
#https://walker-data.com/posts/census-regions/
#https://geodacenter.github.io/rgeoda/articles/rgeoda_tutorial.html#spatial-clustering


library(tidyverse)
library(sf)
library(tidycensus)
library(rgeoda)
library(rmapshaper)
library(leaflet)
library(janitor)
library(tictoc)
library(patchwork)
library(mapview)
library(leafpop)
```

```{r}
options(tigris_use_cache = TRUE,
        scipen = 999,
        digits = 4)

set.seed(1234)

census_vars <- load_variables(2020, "pl", cache = TRUE)

#View(census_vars)

racevars <- c(White = "P2_005N", 
              Black = "P2_006N", 
              Asian = "P2_008N", 
              Hispanic = "P2_002N",
              Total = "P1_001N")

#total population: B01003_001
census_data <- get_decennial(
  geography = "county",
  variables = racevars,
  state = c("PA", "OH", "WV", "MD", "NY", "NJ", "VA", "KY", "DC", "DE", "CT", "RI", "MA", "VT", "NH", "ME"),
  geometry = TRUE,
  #summary_var = "P2_001N",
  year = 2020,
  sumfile = "pl",
  show_call = TRUE,
  cache_table = TRUE
)

pa_tracts <- census_data |> 
  # mutate(NAME = case_when(NAME == "Newport County, Rhode Island" ~ "Washington + Newport County, Rhode Island",
  #                         NAME == "Washington County, Rhode Island" ~ "Washington + Newport County, Rhode Island",
  #                         TRUE ~ NAME)) |> 
  mutate(NAME = case_when(str_detect(NAME, "Barnstable|Dukes|Nantucket") ~ "Barnstable + Dukes + Nantucket Counties, Massachusetts",
                           TRUE ~ NAME)) |> 
  group_by(NAME, variable) |> 
  summarize(value = sum(value)) |> 
  ungroup() |> 
  ms_simplify(keep = .05, keep_shapes = TRUE)

pa_tracts |> 
  filter(variable == "Total") |> 
  ggplot() +
  geom_sf(aes(fill = value), lwd = 0) +
  scale_fill_viridis_c()

pa_tracts |> 
  filter(variable == "Total") |> 
  leaflet() |> 
  addPolygons(weight = 0.1)
```

```{r}
target_state <- pa_tracts |> 
  filter(str_detect(NAME, "Mass")) |> 
  mutate(NAME = case_when(str_detect(NAME, "Barnstable|Dukes|Nantucket") ~ "Barnstable + Dukes + Nantucket Counties, Massachusetts",
                           TRUE ~ NAME)) |> 
  group_by(NAME) |> 
  summarize()

target_state |> 
  mapview::mapview(popup = popupTable(target_state,
                                      zcol = c("NAME")))
```

```{r}
pa_tracts_wide <- pa_tracts |> 
  pivot_wider(names_from = variable, values_from = value)

glimpse(pa_tracts_wide)
```

```{r}
pa_tracts_wide |> 
  write_sf("posts/geospatial-clustering-pittsburgh/post_data/pa_tracts/pa_tracts.shp")
```

```{r}
pa_tracts_wide_geo <- geoda_open("posts/geospatial-clustering-pittsburgh/post_data/pa_tracts/pa_tracts.shp")

#this crashes sometimes. investigate cause. could be caused by tracts that have no neighbors?
w_rook <- rook_weights(pa_tracts_wide)

w_rook

w_queen <- queen_weights(pa_tracts_wide)

w_rook

dist_thres <- min_distthreshold(pa_tracts_wide)

w_dist <- distance_weights(pa_tracts_wide, dist_thres, power=1.0,  is_inverse=FALSE, is_arc=FALSE, is_mile=TRUE)

w_dist
```

```{r}
pa_tracts_wide |> 
  ggplot(aes(Total)) +
  geom_histogram()

cluster_df <- pa_tracts_wide |> 
  select(White:Total) |> 
  st_drop_geometry()

bound_vals <- pa_tracts_wide['Total']

#minimum group population is 10% of total population
min_bound <- pa_tracts_wide |> 
  st_drop_geometry() |> 
  summarize(Total = sum(Total)) |> 
  mutate(min_bound = Total * .1) |> 
  pull(min_bound)

tic()
maxp_clusters_rook <- maxp_greedy(w_rook, cluster_df, bound_vals, min_bound)
maxp_clusters_rook
toc()

tic()
maxp_clusters_queen <- maxp_greedy(w_queen, cluster_df, bound_vals, min_bound)
maxp_clusters_queen
toc()
```

```{r}
pa_clusters <- pa_tracts_wide |> 
  mutate(cluster_rook = as.character(maxp_clusters_rook$Clusters),
         cluster_queen = as.character(maxp_clusters_queen$Clusters))

pa_clusters |> 
  st_drop_geometry() |> 
  count(cluster_rook, sort = TRUE)

cluster_compare <- pa_clusters |> 
  pivot_longer(cols = contains("cluster"), names_to = "cluster_type", values_to = "cluster")

map_rook <- cluster_compare |> 
  filter(cluster_type == "cluster_rook") |> 
  ggplot() +
  geom_sf(aes(fill = cluster)) +
  guides(fill = "none") +
  facet_wrap(vars(cluster_type))

map_queen <- cluster_compare |> 
  filter(cluster_type == "cluster_queen") |> 
  ggplot() +
  geom_sf(aes(fill = cluster)) +
  guides(fill = "none") +
  facet_wrap(vars(cluster_type))

map_rook | map_queen
```

```{r}
fill_pal <- colorFactor(palette = "Paired", domain = pa_clusters$cluster_rook)

labels <- sprintf(
  "<strong>%s</strong><br/>Cluster: %s<br/>White: %d<br/>Black: %d<br/>Asian: %d<br/>Hispanic: %d<br/>Total: %d",
  pa_clusters$NAME, pa_clusters$cluster_rook, pa_clusters$White, pa_clusters$Black, pa_clusters$Asian, pa_clusters$Hispanic, pa_clusters$Total
) %>% lapply(htmltools::HTML)

pa_clusters |> 
  leaflet() |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  addPolygons(fillColor = ~fill_pal(cluster_rook),
              fillOpacity = .5,
              weight = .3,
              #stroke = FALSE,
              label = labels,
  labelOptions = labelOptions(
    style = list("font-weight" = "normal", padding = "3px 8px"),
    textsize = "15px",
    direction = "auto"))
```
